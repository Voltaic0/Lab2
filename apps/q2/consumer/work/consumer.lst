 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 213
    4                      ; Text size: 4556
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   88  00003050  64206e6f	
   88  00003054  74206d61	
   88  00003058  70207468	
   88  0000305c  65207669	
   88  00003060  72747561	
   88  00003064  6c206164	
   88  00003068  64726573	
   88  0000306c  7320746f	
   88  00003070  20746865	
   88  00003074  206d656d	
   88  00003078  6f727920	
   88  0000307c  696e2000	
   89  00003080          	.align 2
   90  00003080          	LC3_LF0:
   91  00003080  2c206578	.ascii ", exiting...\n\000"
   91  00003084  6974696e	
   91  00003088  672e2e2e	
   91  0000308c  0a00    	
   92  0000308e          	.align 2
   93  00003090          	LC4_LF0:
   94  00003090  436f6e73	.ascii "Consumer \000"
   94  00003094  756d6572	
   94  00003098  2000    	
   95  0000309a          	.align 2
   96  0000309c          	LC5_LF0:
   97  0000309c  2072656d	.ascii " removed: \000"
   97  000030a0  6f766564	
   97  000030a4  3a2000  	
   98  000030a7          	.align 2
   99  000030a8          	LC6_LF0:
  100  000030a8  0a00    	.ascii "\n\000"
  101  000030aa          	.align 2
  102  000030ac          	LC7_LF0:
  103  000030ac  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  103  000030b0  73656d61	
  103  000030b4  70686f72	
  103  000030b8  6520735f	
  103  000030bc  70726f63	
  103  000030c0  735f636f	
  103  000030c4  6d706c65	
  103  000030c8  74656420	
  103  000030cc  28256429	
  103  000030d0  20696e20	
  103  000030d4  00      	
  104  000030d5          	.text
  105  000010d4          	.align 2
  106  000010d4          	.proc _main
  107  000010d4          	.global _main
  108  000010d4          	_main:
  109                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  110  000010d4  afbefffc	sw	-4(r29),r30; push fp
  111  000010d8  001df020	add	r30,r0,r29; fp = sp
  112  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  113  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  114  000010e4  8fc20000	lw	r2,(r30)
  115  000010e8  8fc60004	lw	r6,4(r30)
  116  000010ec  0c0010d4	jal	___main
  117  000010f0  54000000	nop; not filled.
  118  000010f4  64410004	snei	r1,r2,#4
  119  000010f8  1020004c	beqz	r1,L14_LF0
  120  000010fc  54000000	nop; not filled.
  121  00001100  23bdfff8	addi	r29,r29,#-8
  122  00001104  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  123  00001108  254a3000	addui	r10,r10,(LC0_LF0)&0xffff
  124  0000110c  afaa0000	sw	(r29),r10
  125  00001110  0c0002a8	jal	_Printf
  126  00001114  54000000	nop; not filled.
  127  00001118  8cca0000	lw	r10,(r6)
  128  0000111c  afaa0000	sw	(r29),r10
  129  00001120  0c000298	jal	_Printf
  130  00001124  54000000	nop; not filled.
  131  00001128  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  132  0000112c  254a3008	addui	r10,r10,(LC1_LF0)&0xffff
  133  00001130  afaa0000	sw	(r29),r10
  134  00001134  0c000284	jal	_Printf
  135  00001138  54000000	nop; not filled.
  136  0000113c  0c000330	jal	_Exit
  137  00001140  54000000	nop; not filled.
  138  00001144  23bd0008	addi	r29,r29,#8
  139  00001148          	L14_LF0:
  140  00001148  23bdfff0	addi	r29,r29,#-16
  141  0000114c  8cca0004	lw	r10,4(r6)
  142  00001150  afaa0000	sw	(r29),r10
  143  00001154  200a0000	addi	r10,r0,#0
  144  00001158  afaa0004	sw	4(r29),r10
  145  0000115c  200a000a	addi	r10,r0,#10
  146  00001160  afaa0008	sw	8(r29),r10
  147  00001164  0c000bb4	jal	_dstrtol
  148  00001168  54000000	nop; not filled.
  149  0000116c  00011020	add	r2,r0,r1
  150  00001170  8cca0008	lw	r10,8(r6)
  151  00001174  afaa0000	sw	(r29),r10
  152  00001178  200a0000	addi	r10,r0,#0
  153  0000117c  afaa0004	sw	4(r29),r10
  154  00001180  200a000a	addi	r10,r0,#10
  155  00001184  afaa0008	sw	8(r29),r10
  156  00001188  0c000b90	jal	_dstrtol
  157  0000118c  54000000	nop; not filled.
  158  00001190  00014020	add	r8,r0,r1
  159  00001194  afa20000	sw	(r29),r2
  160  00001198  0c000250	jal	_shmat
  161  0000119c  54000000	nop; not filled.
  162  000011a0  00012020	add	r4,r0,r1
  163  000011a4  23bd0010	addi	r29,r29,#16
  164  000011a8  64810000	snei	r1,r4,#0
  165  000011ac  1420004c	bnez	r1,L15_LF0
  166  000011b0  54000000	nop; not filled.
  167  000011b4  23bdfff8	addi	r29,r29,#-8
  168  000011b8  3c0a0000	lhi	r10,((LC2_LF0)>>16)&0xffff
  169  000011bc  254a304c	addui	r10,r10,(LC2_LF0)&0xffff
  170  000011c0  afaa0000	sw	(r29),r10
  171  000011c4  0c0001f4	jal	_Printf
  172  000011c8  54000000	nop; not filled.
  173  000011cc  8cca0000	lw	r10,(r6)
  174  000011d0  afaa0000	sw	(r29),r10
  175  000011d4  0c0001e4	jal	_Printf
  176  000011d8  54000000	nop; not filled.
  177  000011dc  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  178  000011e0  254a3080	addui	r10,r10,(LC3_LF0)&0xffff
  179  000011e4  afaa0000	sw	(r29),r10
  180  000011e8  0c0001d0	jal	_Printf
  181  000011ec  54000000	nop; not filled.
  182  000011f0  0c00027c	jal	_Exit
  183  000011f4  54000000	nop; not filled.
  184  000011f8  23bd0008	addi	r29,r29,#8
  185  000011fc          	L15_LF0:
  186  000011fc  20050000	addi	r5,r0,#0
  187  00001200  2009000a	addi	r9,r0,#10
  188  00001204  23c7fff7	addi	r7,r30,#-9
  189  00001208          	L19_LF0:
  190  00001208  23bdfff8	addi	r29,r29,#-8
  191  0000120c  8c8a0014	lw	r10,20(r4)
  192  00001210  afaa0000	sw	(r29),r10
  193  00001214  0c000210	jal	_lock_acquire
  194  00001218  54000000	nop; not filled.
  195  0000121c  8c810004	lw	r1,4(r4)
  196  00001220  8c820000	lw	r2,(r4)
  197  00001224  23bd0008	addi	r29,r29,#8
  198  00001228  00220829	sne	r1,r1,r2
  199  0000122c  102000a4	beqz	r1,L20_LF0
  200  00001230  54000000	nop; not filled.
  201  00001234  00820820	add	r1,r4,r2
  202  00001238  80210008	lb	r1,8(r1)
  203  0000123c  a3c1fff7	sb	-9(r30),r1
  204  00001240  8c810000	lw	r1,(r4)
  205  00001244  20230001	addi	r3,r1,#1
  206  00001248  00600035	movi2fp	f0,r3
  207  0000124c  01200835	movi2fp	f1,r9
  208  00001250  0401000f	div	f0,f0,f1
  209  00001254  00001034	movfp2i	r2,f0
  210  00001258  50410002	slli	r1,r2,#0x2
  211  0000125c  00220820	add	r1,r1,r2
  212  00001260  50210001	slli	r1,r1,#0x1
  213  00001264  00610822	sub	r1,r3,r1
  214  00001268  ac810000	sw	(r4),r1
  215  0000126c  23bdfff8	addi	r29,r29,#-8
  216  00001270  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  217  00001274  254a3090	addui	r10,r10,(LC4_LF0)&0xffff
  218  00001278  afaa0000	sw	(r29),r10
  219  0000127c  0c00013c	jal	_Printf
  220  00001280  54000000	nop; not filled.
  221  00001284  8cca000c	lw	r10,12(r6)
  222  00001288  afaa0000	sw	(r29),r10
  223  0000128c  0c00012c	jal	_Printf
  224  00001290  54000000	nop; not filled.
  225  00001294  3c0a0000	lhi	r10,((LC5_LF0)>>16)&0xffff
  226  00001298  254a309c	addui	r10,r10,(LC5_LF0)&0xffff
  227  0000129c  afaa0000	sw	(r29),r10
  228  000012a0  0c000118	jal	_Printf
  229  000012a4  54000000	nop; not filled.
  230  000012a8  afa70000	sw	(r29),r7
  231  000012ac  0c00010c	jal	_Printf
  232  000012b0  54000000	nop; not filled.
  233  000012b4  3c0a0000	lhi	r10,((LC6_LF0)>>16)&0xffff
  234  000012b8  254a30a8	addui	r10,r10,(LC6_LF0)&0xffff
  235  000012bc  afaa0000	sw	(r29),r10
  236  000012c0  0c0000f8	jal	_Printf
  237  000012c4  54000000	nop; not filled.
  238  000012c8  23bd0008	addi	r29,r29,#8
  239  000012cc  08000008	j	L21_LF0
  240  000012d0  54000000	nop; not filled.
  241  000012d4          	L20_LF0:
  242  000012d4  20a5ffff	addi	r5,r5,#-1
  243  000012d8          	L21_LF0:
  244  000012d8  23bdfff8	addi	r29,r29,#-8
  245  000012dc  8c8a0014	lw	r10,20(r4)
  246  000012e0  afaa0000	sw	(r29),r10
  247  000012e4  0c00014c	jal	_lock_release
  248  000012e8  54000000	nop; not filled.
  249  000012ec  23bd0008	addi	r29,r29,#8
  250  000012f0  20a50001	addi	r5,r5,#1
  251  000012f4  70a1000a	slei	r1,r5,#10
  252  000012f8  1420ff0c	bnez	r1,L19_LF0
  253  000012fc  54000000	nop; not filled.
  254  00001300  23bdfff8	addi	r29,r29,#-8
  255  00001304  afa80000	sw	(r29),r8
  256  00001308  0c000104	jal	_sem_signal
  257  0000130c  54000000	nop; not filled.
  258  00001310  23bd0008	addi	r29,r29,#8
  259  00001314  64210001	snei	r1,r1,#1
  260  00001318  10200050	beqz	r1,L23_LF0
  261  0000131c  54000000	nop; not filled.
  262  00001320  23bdfff8	addi	r29,r29,#-8
  263  00001324  3c0a0000	lhi	r10,((LC7_LF0)>>16)&0xffff
  264  00001328  254a30ac	addui	r10,r10,(LC7_LF0)&0xffff
  265  0000132c  afaa0000	sw	(r29),r10
  266  00001330  afa80004	sw	4(r29),r8
  267  00001334  0c000084	jal	_Printf
  268  00001338  54000000	nop; not filled.
  269  0000133c  8cc60000	lw	r6,(r6)
  270  00001340  afa60000	sw	(r29),r6
  271  00001344  0c000074	jal	_Printf
  272  00001348  54000000	nop; not filled.
  273  0000134c  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  274  00001350  254a3080	addui	r10,r10,(LC3_LF0)&0xffff
  275  00001354  afaa0000	sw	(r29),r10
  276  00001358  0c000060	jal	_Printf
  277  0000135c  54000000	nop; not filled.
  278  00001360  0c00010c	jal	_Exit
  279  00001364  54000000	nop; not filled.
  280  00001368  23bd0008	addi	r29,r29,#8
  281  0000136c          	L23_LF0:
  282  0000136c  0c000e48	jal	_exit
  283  00001370  54000000	nop
  284  00001374          	.endproc _main
  285                      ;;;
  286                      ;;; Stub functions for DLX traps.
  287                      ;;;
  288                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  289                      ;;;
  290                      ;;; The traps such as Open and Close
  291                      ;;; (note the capital letters) are for use by user programs.  The traps
  292                      ;;; with names such as open and close (lower case) are for use by the OS.
  293                      ;;;
  296  00001374          	.align 2
  298                      ;;; The following are the traps to be used by user-level programs
  299                      ;;;
  301  00001374          	.align 2
  302  00001374          	.proc _Open
  303  00001374          	.global _Open
  304  00001374          	_Open:
  305                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  306                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  307                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  308  00001374  44000213	trap	#0x213
  309  00001378  4be00000	jr	r31
  310  0000137c  54000000	nop
  311  00001380          	.endproc _Open
  313  00001380          	.proc _Close
  314  00001380          	.global _Close
  315  00001380          	_Close:
  316  00001380  44000214	trap	#0x214
  317  00001384  4be00000	jr	r31
  318  00001388  54000000	nop
  319  0000138c          	.endproc _Close
  321  0000138c          	.proc _Read
  322  0000138c          	.global _Read
  323  0000138c          	_Read:
  324  0000138c  44000210	trap	#0x210
  325  00001390  4be00000	jr	r31
  326  00001394  54000000	nop
  327  00001398          	.endproc _Read
  329  00001398          	.proc _Write
  330  00001398          	.global _Write
  331  00001398          	_Write:
  332  00001398  44000211	trap	#0x211
  333  0000139c  4be00000	jr	r31
  334  000013a0  54000000	nop
  335  000013a4          	.endproc _Write
  337  000013a4          	.proc _Lseek
  338  000013a4          	.global _Lseek
  339  000013a4          	_Lseek:
  340  000013a4  44000212	trap	#0x212
  341  000013a8  4be00000	jr	r31
  342  000013ac  54000000	nop
  343  000013b0          	.endproc _Lseek
  345  000013b0          	.proc _Putchar
  346  000013b0          	.global _Putchar
  347  000013b0          	_Putchar:
  348  000013b0  44000280	trap	#0x280
  349  000013b4  4be00000	jr	r31
  350  000013b8  54000000	nop
  351  000013bc          	.endproc _Putchar
  353  000013bc          	.proc _Printf
  354  000013bc          	.global _Printf
  355  000013bc          	_Printf:
  356  000013bc  44000201	trap	#0x201
  357  000013c0  4be00000	jr	r31
  358  000013c4  54000000	nop
  359  000013c8          	.endproc _Printf
  361  000013c8          	.proc _getpid
  362  000013c8          	.global _getpid
  363  000013c8          	_getpid:
  364  000013c8  44000431	trap	#0x431
  365  000013cc  4be00000	jr	r31
  366  000013d0  54000000	nop
  367  000013d4          	.endproc _getpid
  369  000013d4          	.proc _process_create
  370  000013d4          	.global _process_create
  371  000013d4          	_process_create:
  372  000013d4  44000432	trap	#0x432
  373  000013d8  4be00000	jr	r31
  374  000013dc  54000000	nop
  375  000013e0          	.endproc _process_create
  377  000013e0          	.proc _shmget
  378  000013e0          	.global _shmget
  379  000013e0          	_shmget:
  380  000013e0  44000440	trap	#0x440
  381  000013e4  4be00000	jr	r31
  382  000013e8  54000000	nop
  383  000013ec          	.endproc _shmget
  385  000013ec          	.proc _shmat
  386  000013ec          	.global _shmat
  387  000013ec          	_shmat:
  388  000013ec  44000441	trap	#0x441
  389  000013f0  4be00000	jr	r31
  390  000013f4  54000000	nop
  391  000013f8          	.endproc _shmat
  393  000013f8          	.proc _sem_create
  394  000013f8          	.global _sem_create
  395  000013f8          	_sem_create:
  396  000013f8  44000450	trap	#0x450
  397  000013fc  4be00000	jr	r31
  398  00001400  54000000	nop
  399  00001404          	.endproc _sem_create
  401  00001404          	.proc _sem_wait
  402  00001404          	.global _sem_wait
  403  00001404          	_sem_wait:
  404  00001404  44000451	trap	#0x451
  405  00001408  4be00000	jr	r31
  406  0000140c  54000000	nop
  407  00001410          	.endproc _sem_wait
  409  00001410          	.proc _sem_signal
  410  00001410          	.global _sem_signal
  411  00001410          	_sem_signal:
  412  00001410  44000452	trap	#0x452
  413  00001414  4be00000	jr	r31
  414  00001418  54000000	nop
  415  0000141c          	.endproc _sem_signal
  417  0000141c          	.proc _lock_create
  418  0000141c          	.global _lock_create
  419  0000141c          	_lock_create:
  420  0000141c  44000453	trap	#0x453
  421  00001420  4be00000	jr	r31
  422  00001424  54000000	nop
  423  00001428          	.endproc _lock_create
  425  00001428          	.proc _lock_acquire
  426  00001428          	.global _lock_acquire
  427  00001428          	_lock_acquire:
  428  00001428  44000454	trap	#0x454
  429  0000142c  4be00000	jr	r31
  430  00001430  54000000	nop
  431  00001434          	.endproc _lock_acquire
  433  00001434          	.proc _lock_release
  434  00001434          	.global _lock_release
  435  00001434          	_lock_release:
  436  00001434  44000455	trap	#0x455
  437  00001438  4be00000	jr	r31
  438  0000143c  54000000	nop
  439  00001440          	.endproc _lock_release
  441  00001440          	.proc _cond_create
  442  00001440          	.global _cond_create
  443  00001440          	_cond_create:
  444  00001440  44000456	trap	#0x456
  445  00001444  4be00000	jr	r31
  446  00001448  54000000	nop
  447  0000144c          	.endproc _cond_create
  449  0000144c          	.proc _cond_wait
  450  0000144c          	.global _cond_wait
  451  0000144c          	_cond_wait:
  452  0000144c  44000457	trap	#0x457
  453  00001450  4be00000	jr	r31
  454  00001454  54000000	nop
  455  00001458          	.endproc _cond_wait
  457  00001458          	.proc _cond_signal
  458  00001458          	.global _cond_signal
  459  00001458          	_cond_signal:
  460  00001458  44000458	trap	#0x458
  461  0000145c  4be00000	jr	r31
  462  00001460  54000000	nop
  463  00001464          	.endproc _cond_signal
  465  00001464          	.proc _cond_broadcast
  466  00001464          	.global _cond_broadcast
  467  00001464          	_cond_broadcast:
  468  00001464  44000459	trap	#0x459
  469  00001468  4be00000	jr	r31
  470  0000146c  54000000	nop
  471  00001470          	.endproc _cond_broadcast
  473  00001470          	.proc _Exit
  474  00001470          	.global _Exit
  475  00001470          	_Exit:
  476  00001470  44000500	trap	#0x500
  477  00001474  4be00000	jr	r31
  478  00001478  54000000	nop
  479  0000147c          	.endproc _Exit
  480                      ; Compiled by GCC
  482  0000147c          	.align 2
  483  0000147c          	.proc _isspace
  484  0000147c          	.global _isspace
  485  0000147c          	_isspace:
  486                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  487  0000147c  afbefffc	sw	-4(r29),r30; push fp
  488  00001480  001df020	add	r30,r0,r29; fp = sp
  489  00001484  afbffff8	sw	-8(r29),r31; push ret addr
  490  00001488  2fbd0018	subui	r29,r29,#24; alloc local storage
  491  0000148c  afa20000	sw	0(r29),r2
  492  00001490  afa30004	sw	4(r29),r3
  493  00001494  afa40008	sw	8(r29),r4
  494  00001498  83c20003	lb	r2,3(r30)
  495  0000149c  20010000	addi	r1,r0,#0
  496  000014a0  304300ff	andi	r3,r2,#0x00ff
  497  000014a4  60640020	seqi	r4,r3,#32
  498  000014a8  1480002c	bnez	r4,L3_LF2
  499  000014ac  54000000	nop; delay slot nop
  500  000014b0  304300ff	andi	r3,r2,#0x00ff
  501  000014b4  60640009	seqi	r4,r3,#9
  502  000014b8  1480001c	bnez	r4,L3_LF2
  503  000014bc  54000000	nop; delay slot nop
  504  000014c0  304300ff	andi	r3,r2,#0x00ff
  505  000014c4  6064000a	seqi	r4,r3,#10
  506  000014c8  1480000c	bnez	r4,L3_LF2
  507  000014cc  54000000	nop; delay slot nop
  508  000014d0  08000008	j	L2_LF2
  509  000014d4  54000000	nop; delay slot nop
  510  000014d8          	L3_LF2:
  511  000014d8  20010001	addi	r1,r0,#1
  512  000014dc          	L2_LF2:
  513  000014dc  08000004	j	L1_LF2
  514  000014e0  54000000	nop; delay slot nop
  515  000014e4          	L1_LF2:
  516  000014e4  8fa20000	lw	r2,0(r29)
  517  000014e8  8fa30004	lw	r3,4(r29)
  518  000014ec  8fa40008	lw	r4,8(r29)
  519  000014f0  8fdffff8	lw	r31,-8(r30)
  520  000014f4  001ee820	add	r29,r0,r30
  521  000014f8  8fdefffc	lw	r30,-4(r30)
  522  000014fc  4be00000	jr	r31
  523  00001500  54000000	nop
  524  00001504          	.endproc _isspace
  525  00001504          	.align 2
  526  00001504          	.proc _isxdigit
  527  00001504          	.global _isxdigit
  528  00001504          	_isxdigit:
  529                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  530  00001504  afbefffc	sw	-4(r29),r30; push fp
  531  00001508  001df020	add	r30,r0,r29; fp = sp
  532  0000150c  afbffff8	sw	-8(r29),r31; push ret addr
  533  00001510  2fbd0018	subui	r29,r29,#24; alloc local storage
  534  00001514  afa20000	sw	0(r29),r2
  535  00001518  afa30004	sw	4(r29),r3
  536  0000151c  afa40008	sw	8(r29),r4
  537  00001520  83c20003	lb	r2,3(r30)
  538  00001524  20010000	addi	r1,r0,#0
  539  00001528  304300ff	andi	r3,r2,#0x00ff
  540  0000152c  6c64002f	sgtui	r4,r3,#47
  541  00001530  1080001c	beqz	r4,L7_LF2
  542  00001534  54000000	nop; delay slot nop
  543  00001538  304300ff	andi	r3,r2,#0x00ff
  544  0000153c  70640039	sleui	r4,r3,#57
  545  00001540  1480005c	bnez	r4,L6_LF2
  546  00001544  54000000	nop; delay slot nop
  547  00001548  08000004	j	L7_LF2
  548  0000154c  54000000	nop; delay slot nop
  549  00001550          	L7_LF2:
  550  00001550  304300ff	andi	r3,r2,#0x00ff
  551  00001554  6c640060	sgtui	r4,r3,#96
  552  00001558  1080001c	beqz	r4,L8_LF2
  553  0000155c  54000000	nop; delay slot nop
  554  00001560  304300ff	andi	r3,r2,#0x00ff
  555  00001564  70640066	sleui	r4,r3,#102
  556  00001568  14800034	bnez	r4,L6_LF2
  557  0000156c  54000000	nop; delay slot nop
  558  00001570  08000004	j	L8_LF2
  559  00001574  54000000	nop; delay slot nop
  560  00001578          	L8_LF2:
  561  00001578  304300ff	andi	r3,r2,#0x00ff
  562  0000157c  6c640040	sgtui	r4,r3,#64
  563  00001580  10800020	beqz	r4,L5_LF2
  564  00001584  54000000	nop; delay slot nop
  565  00001588  304300ff	andi	r3,r2,#0x00ff
  566  0000158c  70640041	sleui	r4,r3,#65
  567  00001590  1480000c	bnez	r4,L6_LF2
  568  00001594  54000000	nop; delay slot nop
  569  00001598  08000008	j	L5_LF2
  570  0000159c  54000000	nop; delay slot nop
  571  000015a0          	L6_LF2:
  572  000015a0  20010001	addi	r1,r0,#1
  573  000015a4          	L5_LF2:
  574  000015a4  08000004	j	L4_LF2
  575  000015a8  54000000	nop; delay slot nop
  576  000015ac          	L4_LF2:
  577  000015ac  8fa20000	lw	r2,0(r29)
  578  000015b0  8fa30004	lw	r3,4(r29)
  579  000015b4  8fa40008	lw	r4,8(r29)
  580  000015b8  8fdffff8	lw	r31,-8(r30)
  581  000015bc  001ee820	add	r29,r0,r30
  582  000015c0  8fdefffc	lw	r30,-4(r30)
  583  000015c4  4be00000	jr	r31
  584  000015c8  54000000	nop
  585  000015cc          	.endproc _isxdigit
  586  000015cc          	.align 2
  587  000015cc          	.proc _dstrcpy
  588  000015cc          	.global _dstrcpy
  589  000015cc          	_dstrcpy:
  590                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  591  000015cc  afbefffc	sw	-4(r29),r30; push fp
  592  000015d0  001df020	add	r30,r0,r29; fp = sp
  593  000015d4  afbffff8	sw	-8(r29),r31; push ret addr
  594  000015d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  595  000015dc  afa20000	sw	0(r29),r2
  596  000015e0  afa30004	sw	4(r29),r3
  597  000015e4  8fc10000	lw	r1,(r30)
  598  000015e8  afc1fff4	sw	-12(r30),r1
  599  000015ec          	L10_LF2:
  600  000015ec  8fc10000	lw	r1,(r30)
  601  000015f0  20220001	addi	r2,r1,#1
  602  000015f4  afc20000	sw	(r30),r2
  603  000015f8  8fc20004	lw	r2,4(r30)
  604  000015fc  20430001	addi	r3,r2,#1
  605  00001600  afc30004	sw	4(r30),r3
  606  00001604  80420000	lb	r2,(r2)
  607  00001608  a0220000	sb	(r1),r2
  608  0000160c  a3c2fff3	sb	-13(r30),r2
  609  00001610          	L12_LF2:
  610  00001610  93c1fff3	lbu	r1,-13(r30)
  611  00001614  64220000	snei	r2,r1,#0
  612  00001618  1440000c	bnez	r2,L13_LF2
  613  0000161c  54000000	nop; delay slot nop
  614  00001620  0800000c	j	L11_LF2
  615  00001624  54000000	nop; delay slot nop
  616  00001628          	L13_LF2:
  617  00001628  0bffffc0	j	L10_LF2
  618  0000162c  54000000	nop; delay slot nop
  619  00001630          	L11_LF2:
  620  00001630  8fc1fff4	lw	r1,-12(r30)
  621  00001634  08000004	j	L9_LF2
  622  00001638  54000000	nop; delay slot nop
  623  0000163c          	L9_LF2:
  624  0000163c  8fa20000	lw	r2,0(r29)
  625  00001640  8fa30004	lw	r3,4(r29)
  626  00001644  8fdffff8	lw	r31,-8(r30)
  627  00001648  001ee820	add	r29,r0,r30
  628  0000164c  8fdefffc	lw	r30,-4(r30)
  629  00001650  4be00000	jr	r31
  630  00001654  54000000	nop
  631  00001658          	.endproc _dstrcpy
  632  00001658          	.align 2
  633  00001658          	.proc _dstrncpy
  634  00001658          	.global _dstrncpy
  635  00001658          	_dstrncpy:
  636                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  637  00001658  afbefffc	sw	-4(r29),r30; push fp
  638  0000165c  001df020	add	r30,r0,r29; fp = sp
  639  00001660  afbffff8	sw	-8(r29),r31; push ret addr
  640  00001664  2fbd0018	subui	r29,r29,#24; alloc local storage
  641  00001668  afa20000	sw	0(r29),r2
  642  0000166c  afa30004	sw	4(r29),r3
  643  00001670  8fc10000	lw	r1,(r30)
  644  00001674  afc1fff4	sw	-12(r30),r1
  645  00001678          	L15_LF2:
  646  00001678  8fc10008	lw	r1,8(r30)
  647  0000167c  2022ffff	addi	r2,r1,#-1
  648  00001680  afc20008	sw	8(r30),r2
  649  00001684  70210000	slei	r1,r1,#0
  650  00001688  1020000c	beqz	r1,L18_LF2
  651  0000168c  54000000	nop; delay slot nop
  652  00001690  08000048	j	L16_LF2
  653  00001694  54000000	nop; delay slot nop
  654  00001698          	L18_LF2:
  655  00001698  8fc10000	lw	r1,(r30)
  656  0000169c  20220001	addi	r2,r1,#1
  657  000016a0  afc20000	sw	(r30),r2
  658  000016a4  8fc20004	lw	r2,4(r30)
  659  000016a8  20430001	addi	r3,r2,#1
  660  000016ac  afc30004	sw	4(r30),r3
  661  000016b0  80420000	lb	r2,(r2)
  662  000016b4  a0220000	sb	(r1),r2
  663  000016b8  a3c2fff3	sb	-13(r30),r2
  664  000016bc          	L17_LF2:
  665  000016bc  93c1fff3	lbu	r1,-13(r30)
  666  000016c0  64220000	snei	r2,r1,#0
  667  000016c4  1440000c	bnez	r2,L19_LF2
  668  000016c8  54000000	nop; delay slot nop
  669  000016cc  0800000c	j	L16_LF2
  670  000016d0  54000000	nop; delay slot nop
  671  000016d4          	L19_LF2:
  672  000016d4  0bffffa0	j	L15_LF2
  673  000016d8  54000000	nop; delay slot nop
  674  000016dc          	L16_LF2:
  675  000016dc  8fc1fff4	lw	r1,-12(r30)
  676  000016e0  08000004	j	L14_LF2
  677  000016e4  54000000	nop; delay slot nop
  678  000016e8          	L14_LF2:
  679  000016e8  8fa20000	lw	r2,0(r29)
  680  000016ec  8fa30004	lw	r3,4(r29)
  681  000016f0  8fdffff8	lw	r31,-8(r30)
  682  000016f4  001ee820	add	r29,r0,r30
  683  000016f8  8fdefffc	lw	r30,-4(r30)
  684  000016fc  4be00000	jr	r31
  685  00001700  54000000	nop
  686  00001704          	.endproc _dstrncpy
  687  00001704          	.align 2
  688  00001704          	.proc _dstrcat
  689  00001704          	.global _dstrcat
  690  00001704          	_dstrcat:
  691                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  692  00001704  afbefffc	sw	-4(r29),r30; push fp
  693  00001708  001df020	add	r30,r0,r29; fp = sp
  694  0000170c  afbffff8	sw	-8(r29),r31; push ret addr
  695  00001710  2fbd0018	subui	r29,r29,#24; alloc local storage
  696  00001714  afa20000	sw	0(r29),r2
  697  00001718  8fc10000	lw	r1,(r30)
  698  0000171c  afc1fff4	sw	-12(r30),r1
  699  00001720          	L21_LF2:
  700  00001720  8fc10000	lw	r1,(r30)
  701  00001724  90220000	lbu	r2,(r1)
  702  00001728  64410000	snei	r1,r2,#0
  703  0000172c  1420000c	bnez	r1,L23_LF2
  704  00001730  54000000	nop; delay slot nop
  705  00001734  0800001c	j	L22_LF2
  706  00001738  54000000	nop; delay slot nop
  707  0000173c          	L23_LF2:
  708  0000173c  8fc20000	lw	r2,(r30)
  709  00001740  20410001	addi	r1,r2,#1
  710  00001744  00011020	add	r2,r0,r1
  711  00001748  afc20000	sw	(r30),r2
  712  0000174c  0bffffd0	j	L21_LF2
  713  00001750  54000000	nop; delay slot nop
  714  00001754          	L22_LF2:
  715  00001754  23bdfff8	addi	r29,r29,#-8
  716  00001758  001d0820	add	r1,r0,r29
  717  0000175c  8fc20000	lw	r2,(r30)
  718  00001760  ac220000	sw	(r1),r2
  719  00001764  8fc20004	lw	r2,4(r30)
  720  00001768  ac220004	sw	4(r1),r2
  721  0000176c  0ffffe5c	jal	_dstrcpy
  722  00001770  54000000	nop; delay slot nop
  723  00001774  23bd0008	addi	r29,r29,#8
  724  00001778  8fc1fff4	lw	r1,-12(r30)
  725  0000177c  08000004	j	L20_LF2
  726  00001780  54000000	nop; delay slot nop
  727  00001784          	L20_LF2:
  728  00001784  8fa20000	lw	r2,0(r29)
  729  00001788  8fdffff8	lw	r31,-8(r30)
  730  0000178c  001ee820	add	r29,r0,r30
  731  00001790  8fdefffc	lw	r30,-4(r30)
  732  00001794  4be00000	jr	r31
  733  00001798  54000000	nop
  734  0000179c          	.endproc _dstrcat
  735  0000179c          	.align 2
  736  0000179c          	.proc _dstrncmp
  737  0000179c          	.global _dstrncmp
  738  0000179c          	_dstrncmp:
  739                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  740  0000179c  afbefffc	sw	-4(r29),r30; push fp
  741  000017a0  001df020	add	r30,r0,r29; fp = sp
  742  000017a4  afbffff8	sw	-8(r29),r31; push ret addr
  743  000017a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  744  000017ac  afa20000	sw	0(r29),r2
  745  000017b0  afa30004	sw	4(r29),r3
  746  000017b4  54000000	nop
  747  000017b8  20010000	addi	r1,r0,#0
  748  000017bc  afc1fff4	sw	-12(r30),r1
  749  000017c0          	L25_LF2:
  750  000017c0  8fc1fff4	lw	r1,-12(r30)
  751  000017c4  8fc20008	lw	r2,8(r30)
  752  000017c8  0022082a	slt	r1,r1,r2
  753  000017cc  1420000c	bnez	r1,L28_LF2
  754  000017d0  54000000	nop; delay slot nop
  755  000017d4  08000088	j	L26_LF2
  756  000017d8  54000000	nop; delay slot nop
  757  000017dc          	L28_LF2:
  758  000017dc  8fc10004	lw	r1,4(r30)
  759  000017e0  90220000	lbu	r2,(r1)
  760  000017e4  64410000	snei	r1,r2,#0
  761  000017e8  14200018	bnez	r1,L29_LF2
  762  000017ec  54000000	nop; delay slot nop
  763  000017f0  20010000	addi	r1,r0,#0
  764  000017f4  080000d8	j	L24_LF2
  765  000017f8  54000000	nop; delay slot nop
  766  000017fc  08000028	j	L30_LF2
  767  00001800  54000000	nop; delay slot nop
  768  00001804          	L29_LF2:
  769  00001804  8fc10000	lw	r1,(r30)
  770  00001808  8fc20004	lw	r2,4(r30)
  771  0000180c  90210000	lbu	r1,(r1)
  772  00001810  90420000	lbu	r2,(r2)
  773  00001814  00220829	sne	r1,r1,r2
  774  00001818  1020000c	beqz	r1,L30_LF2
  775  0000181c  54000000	nop; delay slot nop
  776  00001820  0800003c	j	L26_LF2
  777  00001824  54000000	nop; delay slot nop
  778  00001828          	L31_LF2:
  779  00001828          	L30_LF2:
  780  00001828  8fc20000	lw	r2,(r30)
  781  0000182c  20410001	addi	r1,r2,#1
  782  00001830  00011020	add	r2,r0,r1
  783  00001834  afc20000	sw	(r30),r2
  784  00001838  8fc20004	lw	r2,4(r30)
  785  0000183c  20410001	addi	r1,r2,#1
  786  00001840  00011020	add	r2,r0,r1
  787  00001844  afc20004	sw	4(r30),r2
  788  00001848          	L27_LF2:
  789  00001848  8fc2fff4	lw	r2,-12(r30)
  790  0000184c  20410001	addi	r1,r2,#1
  791  00001850  00011020	add	r2,r0,r1
  792  00001854  afc2fff4	sw	-12(r30),r2
  793  00001858  0bffff64	j	L25_LF2
  794  0000185c  54000000	nop; delay slot nop
  795  00001860          	L26_LF2:
  796  00001860  8fc1fff4	lw	r1,-12(r30)
  797  00001864  8fc20008	lw	r2,8(r30)
  798  00001868  00220828	seq	r1,r1,r2
  799  0000186c  10200018	beqz	r1,L32_LF2
  800  00001870  54000000	nop; delay slot nop
  801  00001874  20010000	addi	r1,r0,#0
  802  00001878  08000054	j	L24_LF2
  803  0000187c  54000000	nop; delay slot nop
  804  00001880  0800004c	j	L33_LF2
  805  00001884  54000000	nop; delay slot nop
  806  00001888          	L32_LF2:
  807  00001888  8fc20000	lw	r2,(r30)
  808  0000188c  90410000	lbu	r1,(r2)
  809  00001890  8fc20004	lw	r2,4(r30)
  810  00001894  90430000	lbu	r3,(r2)
  811  00001898  00230822	sub	r1,r1,r3
  812  0000189c  74220000	sgei	r2,r1,#0
  813  000018a0  10400020	beqz	r2,L34_LF2
  814  000018a4  54000000	nop; delay slot nop
  815  000018a8  8fc10000	lw	r1,(r30)
  816  000018ac  8fc20004	lw	r2,4(r30)
  817  000018b0  90210000	lbu	r1,(r1)
  818  000018b4  90420000	lbu	r2,(r2)
  819  000018b8  00220829	sne	r1,r1,r2
  820  000018bc  08000008	j	L35_LF2
  821  000018c0  54000000	nop; delay slot nop
  822  000018c4          	L34_LF2:
  823  000018c4  2001ffff	addi	r1,r0,#-1
  824  000018c8          	L35_LF2:
  825  000018c8  08000004	j	L24_LF2
  826  000018cc  54000000	nop; delay slot nop
  827  000018d0          	L33_LF2:
  828  000018d0          	L24_LF2:
  829  000018d0  8fa20000	lw	r2,0(r29)
  830  000018d4  8fa30004	lw	r3,4(r29)
  831  000018d8  8fdffff8	lw	r31,-8(r30)
  832  000018dc  001ee820	add	r29,r0,r30
  833  000018e0  8fdefffc	lw	r30,-4(r30)
  834  000018e4  4be00000	jr	r31
  835  000018e8  54000000	nop
  836  000018ec          	.endproc _dstrncmp
  837  000018ec          	.align 2
  838  000018ec          	.proc _dstrlen
  839  000018ec          	.global _dstrlen
  840  000018ec          	_dstrlen:
  841                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  842  000018ec  afbefffc	sw	-4(r29),r30; push fp
  843  000018f0  001df020	add	r30,r0,r29; fp = sp
  844  000018f4  afbffff8	sw	-8(r29),r31; push ret addr
  845  000018f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  846  000018fc  afa20000	sw	0(r29),r2
  847  00001900  20010000	addi	r1,r0,#0
  848  00001904  afc1fff4	sw	-12(r30),r1
  849  00001908          	L37_LF2:
  850  00001908  8fc10000	lw	r1,(r30)
  851  0000190c  20220001	addi	r2,r1,#1
  852  00001910  afc20000	sw	(r30),r2
  853  00001914  90210000	lbu	r1,(r1)
  854  00001918  64220000	snei	r2,r1,#0
  855  0000191c  1440000c	bnez	r2,L39_LF2
  856  00001920  54000000	nop; delay slot nop
  857  00001924  0800001c	j	L38_LF2
  858  00001928  54000000	nop; delay slot nop
  859  0000192c          	L39_LF2:
  860  0000192c  8fc2fff4	lw	r2,-12(r30)
  861  00001930  20410001	addi	r1,r2,#1
  862  00001934  00011020	add	r2,r0,r1
  863  00001938  afc2fff4	sw	-12(r30),r2
  864  0000193c  0bffffc8	j	L37_LF2
  865  00001940  54000000	nop; delay slot nop
  866  00001944          	L38_LF2:
  867  00001944  8fc1fff4	lw	r1,-12(r30)
  868  00001948  08000004	j	L36_LF2
  869  0000194c  54000000	nop; delay slot nop
  870  00001950          	L36_LF2:
  871  00001950  8fa20000	lw	r2,0(r29)
  872  00001954  8fdffff8	lw	r31,-8(r30)
  873  00001958  001ee820	add	r29,r0,r30
  874  0000195c  8fdefffc	lw	r30,-4(r30)
  875  00001960  4be00000	jr	r31
  876  00001964  54000000	nop
  877  00001968          	.endproc _dstrlen
  878  00001968          	.align 2
  879  00001968          	.proc _dstrstr
  880  00001968          	.global _dstrstr
  881  00001968          	_dstrstr:
  882                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  883  00001968  afbefffc	sw	-4(r29),r30; push fp
  884  0000196c  001df020	add	r30,r0,r29; fp = sp
  885  00001970  afbffff8	sw	-8(r29),r31; push ret addr
  886  00001974  2fbd0018	subui	r29,r29,#24; alloc local storage
  887  00001978  afa20000	sw	0(r29),r2
  888  0000197c  23bdfff8	addi	r29,r29,#-8
  889  00001980  001d0820	add	r1,r0,r29
  890  00001984  8fc20004	lw	r2,4(r30)
  891  00001988  ac220000	sw	(r1),r2
  892  0000198c  0fffff5c	jal	_dstrlen
  893  00001990  54000000	nop; delay slot nop
  894  00001994  23bd0008	addi	r29,r29,#8
  895  00001998  afc1fff4	sw	-12(r30),r1
  896  0000199c          	L41_LF2:
  897  0000199c  8fc10000	lw	r1,(r30)
  898  000019a0  90220000	lbu	r2,(r1)
  899  000019a4  64410000	snei	r1,r2,#0
  900  000019a8  1420000c	bnez	r1,L43_LF2
  901  000019ac  54000000	nop; delay slot nop
  902  000019b0  08000060	j	L42_LF2
  903  000019b4  54000000	nop; delay slot nop
  904  000019b8          	L43_LF2:
  905  000019b8  23bdfff0	addi	r29,r29,#-16
  906  000019bc  001d0820	add	r1,r0,r29
  907  000019c0  8fc20000	lw	r2,(r30)
  908  000019c4  ac220000	sw	(r1),r2
  909  000019c8  8fc20004	lw	r2,4(r30)
  910  000019cc  ac220004	sw	4(r1),r2
  911  000019d0  8fc2fff4	lw	r2,-12(r30)
  912  000019d4  ac220008	sw	8(r1),r2
  913  000019d8  0ffffdc0	jal	_dstrncmp
  914  000019dc  54000000	nop; delay slot nop
  915  000019e0  23bd0010	addi	r29,r29,#16
  916  000019e4  64220000	snei	r2,r1,#0
  917  000019e8  14400010	bnez	r2,L44_LF2
  918  000019ec  54000000	nop; delay slot nop
  919  000019f0  8fc10000	lw	r1,(r30)
  920  000019f4  08000028	j	L40_LF2
  921  000019f8  54000000	nop; delay slot nop
  922  000019fc          	L44_LF2:
  923  000019fc  8fc20000	lw	r2,(r30)
  924  00001a00  20410001	addi	r1,r2,#1
  925  00001a04  00011020	add	r2,r0,r1
  926  00001a08  afc20000	sw	(r30),r2
  927  00001a0c  0bffff8c	j	L41_LF2
  928  00001a10  54000000	nop; delay slot nop
  929  00001a14          	L42_LF2:
  930  00001a14  20010000	addi	r1,r0,#0
  931  00001a18  08000004	j	L40_LF2
  932  00001a1c  54000000	nop; delay slot nop
  933  00001a20          	L40_LF2:
  934  00001a20  8fa20000	lw	r2,0(r29)
  935  00001a24  8fdffff8	lw	r31,-8(r30)
  936  00001a28  001ee820	add	r29,r0,r30
  937  00001a2c  8fdefffc	lw	r30,-4(r30)
  938  00001a30  4be00000	jr	r31
  939  00001a34  54000000	nop
  940  00001a38          	.endproc _dstrstr
  941  00001a38          	.align 2
  942  00001a38          	.proc _dmindex
  943  00001a38          	.global _dmindex
  944  00001a38          	_dmindex:
  945                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  946  00001a38  afbefffc	sw	-4(r29),r30; push fp
  947  00001a3c  001df020	add	r30,r0,r29; fp = sp
  948  00001a40  afbffff8	sw	-8(r29),r31; push ret addr
  949  00001a44  2fbd0018	subui	r29,r29,#24; alloc local storage
  950  00001a48  afa20000	sw	0(r29),r2
  951  00001a4c  54000000	nop
  952  00001a50          	L46_LF2:
  953  00001a50  8fc10000	lw	r1,(r30)
  954  00001a54  90220000	lbu	r2,(r1)
  955  00001a58  64410000	snei	r1,r2,#0
  956  00001a5c  1420000c	bnez	r1,L48_LF2
  957  00001a60  54000000	nop; delay slot nop
  958  00001a64  08000070	j	L47_LF2
  959  00001a68  54000000	nop; delay slot nop
  960  00001a6c          	L48_LF2:
  961  00001a6c  8fc10004	lw	r1,4(r30)
  962  00001a70  afc1fff4	sw	-12(r30),r1
  963  00001a74          	L49_LF2:
  964  00001a74  8fc1fff4	lw	r1,-12(r30)
  965  00001a78  90220000	lbu	r2,(r1)
  966  00001a7c  64410000	snei	r1,r2,#0
  967  00001a80  1420000c	bnez	r1,L52_LF2
  968  00001a84  54000000	nop; delay slot nop
  969  00001a88  08000044	j	L50_LF2
  970  00001a8c  54000000	nop; delay slot nop
  971  00001a90          	L52_LF2:
  972  00001a90  8fc10000	lw	r1,(r30)
  973  00001a94  8fc2fff4	lw	r2,-12(r30)
  974  00001a98  90210000	lbu	r1,(r1)
  975  00001a9c  90420000	lbu	r2,(r2)
  976  00001aa0  00220828	seq	r1,r1,r2
  977  00001aa4  10200010	beqz	r1,L51_LF2
  978  00001aa8  54000000	nop; delay slot nop
  979  00001aac  8fc10000	lw	r1,(r30)
  980  00001ab0  08000030	j	L45_LF2
  981  00001ab4  54000000	nop; delay slot nop
  982  00001ab8          	L53_LF2:
  983  00001ab8          	L51_LF2:
  984  00001ab8  8fc2fff4	lw	r2,-12(r30)
  985  00001abc  20410001	addi	r1,r2,#1
  986  00001ac0  00011020	add	r2,r0,r1
  987  00001ac4  afc2fff4	sw	-12(r30),r2
  988  00001ac8  0bffffa8	j	L49_LF2
  989  00001acc  54000000	nop; delay slot nop
  990  00001ad0          	L50_LF2:
  991  00001ad0  0bffff7c	j	L46_LF2
  992  00001ad4  54000000	nop; delay slot nop
  993  00001ad8          	L47_LF2:
  994  00001ad8  20010000	addi	r1,r0,#0
  995  00001adc  08000004	j	L45_LF2
  996  00001ae0  54000000	nop; delay slot nop
  997  00001ae4          	L45_LF2:
  998  00001ae4  8fa20000	lw	r2,0(r29)
  999  00001ae8  8fdffff8	lw	r31,-8(r30)
 1000  00001aec  001ee820	add	r29,r0,r30
 1001  00001af0  8fdefffc	lw	r30,-4(r30)
 1002  00001af4  4be00000	jr	r31
 1003  00001af8  54000000	nop
 1004  00001afc          	.endproc _dmindex
 1005  00001afc          	.align 2
 1006  00001afc          	.proc _dindex
 1007  00001afc          	.global _dindex
 1008  00001afc          	_dindex:
 1009                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1010  00001afc  afbefffc	sw	-4(r29),r30; push fp
 1011  00001b00  001df020	add	r30,r0,r29; fp = sp
 1012  00001b04  afbffff8	sw	-8(r29),r31; push ret addr
 1013  00001b08  2fbd0010	subui	r29,r29,#16; alloc local storage
 1014  00001b0c  afa20000	sw	0(r29),r2
 1015  00001b10  54000000	nop
 1016  00001b14          	L55_LF2:
 1017  00001b14  8fc10000	lw	r1,(r30)
 1018  00001b18  90220000	lbu	r2,(r1)
 1019  00001b1c  64410000	snei	r1,r2,#0
 1020  00001b20  1420000c	bnez	r1,L57_LF2
 1021  00001b24  54000000	nop; delay slot nop
 1022  00001b28  08000040	j	L56_LF2
 1023  00001b2c  54000000	nop; delay slot nop
 1024  00001b30          	L57_LF2:
 1025  00001b30  8fc10000	lw	r1,(r30)
 1026  00001b34  90220000	lbu	r2,(r1)
 1027  00001b38  8fc10004	lw	r1,4(r30)
 1028  00001b3c  00411028	seq	r2,r2,r1
 1029  00001b40  10400010	beqz	r2,L58_LF2
 1030  00001b44  54000000	nop; delay slot nop
 1031  00001b48  8fc10000	lw	r1,(r30)
 1032  00001b4c  08000028	j	L54_LF2
 1033  00001b50  54000000	nop; delay slot nop
 1034  00001b54          	L58_LF2:
 1035  00001b54  8fc20000	lw	r2,(r30)
 1036  00001b58  20410001	addi	r1,r2,#1
 1037  00001b5c  00011020	add	r2,r0,r1
 1038  00001b60  afc20000	sw	(r30),r2
 1039  00001b64  0bffffac	j	L55_LF2
 1040  00001b68  54000000	nop; delay slot nop
 1041  00001b6c          	L56_LF2:
 1042  00001b6c  20010000	addi	r1,r0,#0
 1043  00001b70  08000004	j	L54_LF2
 1044  00001b74  54000000	nop; delay slot nop
 1045  00001b78          	L54_LF2:
 1046  00001b78  8fa20000	lw	r2,0(r29)
 1047  00001b7c  8fdffff8	lw	r31,-8(r30)
 1048  00001b80  001ee820	add	r29,r0,r30
 1049  00001b84  8fdefffc	lw	r30,-4(r30)
 1050  00001b88  4be00000	jr	r31
 1051  00001b8c  54000000	nop
 1052  00001b90          	.endproc _dindex
 1053  00001b90          	.align 2
 1054  00001b90          	.proc _ditoa
 1055  00001b90          	.global _ditoa
 1056  00001b90          	_ditoa:
 1057                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1058  00001b90  afbefffc	sw	-4(r29),r30; push fp
 1059  00001b94  001df020	add	r30,r0,r29; fp = sp
 1060  00001b98  afbffff8	sw	-8(r29),r31; push ret addr
 1061  00001b9c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1062  00001ba0  afa20000	sw	0(r29),r2
 1063  00001ba4  afa30004	sw	4(r29),r3
 1064  00001ba8  8fc10000	lw	r1,(r30)
 1065  00001bac  68220000	slti	r2,r1,#0
 1066  00001bb0  1040002c	beqz	r2,L60_LF2
 1067  00001bb4  54000000	nop; delay slot nop
 1068  00001bb8  8fc10004	lw	r1,4(r30)
 1069  00001bbc  20220001	addi	r2,r1,#1
 1070  00001bc0  afc20004	sw	4(r30),r2
 1071  00001bc4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1072  00001bc8  a0220000	sb	(r1),r2
 1073  00001bcc  8fc10000	lw	r1,(r30)
 1074  00001bd0  00011022	sub	r2,r0,r1
 1075  00001bd4  afc20000	sw	(r30),r2
 1076  00001bd8  08000118	j	L61_LF2
 1077  00001bdc  54000000	nop; delay slot nop
 1078  00001be0          	L60_LF2:
 1079  00001be0  8fc10000	lw	r1,(r30)
 1080  00001be4  64220000	snei	r2,r1,#0
 1081  00001be8  14400020	bnez	r2,L62_LF2
 1082  00001bec  54000000	nop; delay slot nop
 1083  00001bf0  8fc10004	lw	r1,4(r30)
 1084  00001bf4  20220001	addi	r2,r1,#1
 1085  00001bf8  afc20004	sw	4(r30),r2
 1086  00001bfc  20020030	addi	r2,r0,(#0x30)&0xff
 1087  00001c00  a0220000	sb	(r1),r2
 1088  00001c04  080000ec	j	L61_LF2
 1089  00001c08  54000000	nop; delay slot nop
 1090  00001c0c          	L62_LF2:
 1091  00001c0c  20010001	addi	r1,r0,#1
 1092  00001c10  afc1fff4	sw	-12(r30),r1
 1093  00001c14          	L64_LF2:
 1094  00001c14  8fc1fff4	lw	r1,-12(r30)
 1095  00001c18  8fc20000	lw	r2,(r30)
 1096  00001c1c  0022082c	sle	r1,r1,r2
 1097  00001c20  1420000c	bnez	r1,L66_LF2
 1098  00001c24  54000000	nop; delay slot nop
 1099  00001c28  08000024	j	L65_LF2
 1100  00001c2c  54000000	nop; delay slot nop
 1101  00001c30          	L67_LF2:
 1102  00001c30          	L66_LF2:
 1103  00001c30  8fc1fff4	lw	r1,-12(r30)
 1104  00001c34  00011820	add	r3,r0,r1
 1105  00001c38  50620002	slli	r2,r3,#0x2
 1106  00001c3c  00411020	add	r2,r2,r1
 1107  00001c40  50410001	slli	r1,r2,#0x1
 1108  00001c44  afc1fff4	sw	-12(r30),r1
 1109  00001c48  0bffffc8	j	L64_LF2
 1110  00001c4c  54000000	nop; delay slot nop
 1111  00001c50          	L65_LF2:
 1112  00001c50  54000000	nop
 1113  00001c54          	L68_LF2:
 1114  00001c54  8fc1fff4	lw	r1,-12(r30)
 1115  00001c58  2002000a	addi	r2,r0,#10
 1116  00001c5c  00200035	movi2fp	f0,r1
 1117  00001c60  00400835	movi2fp	f1,r2
 1118  00001c64  0401000f	div	f0,f0,f1
 1119  00001c68  00000834	movfp2i	r1,f0
 1120  00001c6c  afc1fff4	sw	-12(r30),r1
 1121  00001c70  8fc10004	lw	r1,4(r30)
 1122  00001c74  20220001	addi	r2,r1,#1
 1123  00001c78  afc20004	sw	4(r30),r2
 1124  00001c7c  8fc20000	lw	r2,(r30)
 1125  00001c80  8fc3fff4	lw	r3,-12(r30)
 1126  00001c84  00400035	movi2fp	f0,r2
 1127  00001c88  00600835	movi2fp	f1,r3
 1128  00001c8c  0401000f	div	f0,f0,f1
 1129  00001c90  00001034	movfp2i	r2,f0
 1130  00001c94  00021820	add	r3,r0,r2
 1131  00001c98  20620030	addi	r2,r3,#48
 1132  00001c9c  a0220000	sb	(r1),r2
 1133  00001ca0  8fc10000	lw	r1,(r30)
 1134  00001ca4  8fc3fff4	lw	r3,-12(r30)
 1135  00001ca8  00200035	movi2fp	f0,r1
 1136  00001cac  00600835	movi2fp	f1,r3
 1137  00001cb0  0401000f	div	f0,f0,f1
 1138  00001cb4  00001034	movfp2i	r2,f0
 1139  00001cb8  8fc3fff4	lw	r3,-12(r30)
 1140  00001cbc  00400035	movi2fp	f0,r2
 1141  00001cc0  00600835	movi2fp	f1,r3
 1142  00001cc4  0401000e	mult	f0,f0,f1
 1143  00001cc8  00001034	movfp2i	r2,f0
 1144  00001ccc  00220822	sub	r1,r1,r2
 1145  00001cd0  afc10000	sw	(r30),r1
 1146  00001cd4          	L70_LF2:
 1147  00001cd4  8fc1fff4	lw	r1,-12(r30)
 1148  00001cd8  6c220001	sgti	r2,r1,#1
 1149  00001cdc  1440000c	bnez	r2,L71_LF2
 1150  00001ce0  54000000	nop; delay slot nop
 1151  00001ce4  0800000c	j	L61_LF2
 1152  00001ce8  54000000	nop; delay slot nop
 1153  00001cec          	L71_LF2:
 1154  00001cec  0bffff64	j	L68_LF2
 1155  00001cf0  54000000	nop; delay slot nop
 1156  00001cf4          	L69_LF2:
 1157  00001cf4          	L63_LF2:
 1158  00001cf4          	L61_LF2:
 1159  00001cf4  8fc10004	lw	r1,4(r30)
 1160  00001cf8  20020000	addi	r2,r0,(#0x0)&0xff
 1161  00001cfc  a0220000	sb	(r1),r2
 1162  00001d00          	L59_LF2:
 1163  00001d00  8fa20000	lw	r2,0(r29)
 1164  00001d04  8fa30004	lw	r3,4(r29)
 1165  00001d08  8fdffff8	lw	r31,-8(r30)
 1166  00001d0c  001ee820	add	r29,r0,r30
 1167  00001d10  8fdefffc	lw	r30,-4(r30)
 1168  00001d14  4be00000	jr	r31
 1169  00001d18  54000000	nop
 1170  00001d1c          	.endproc _ditoa
 1171  00001d1c          	.align 2
 1172  00001d1c          	.proc _dstrtol
 1173  00001d1c          	.global _dstrtol
 1174  00001d1c          	_dstrtol:
 1175                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1176  00001d1c  afbefffc	sw	-4(r29),r30; push fp
 1177  00001d20  001df020	add	r30,r0,r29; fp = sp
 1178  00001d24  afbffff8	sw	-8(r29),r31; push ret addr
 1179  00001d28  2fbd0020	subui	r29,r29,#32; alloc local storage
 1180  00001d2c  afa20000	sw	0(r29),r2
 1181  00001d30  20010000	addi	r1,r0,#0
 1182  00001d34  afc1fff4	sw	-12(r30),r1
 1183  00001d38          	L73_LF2:
 1184  00001d38  8fc10000	lw	r1,(r30)
 1185  00001d3c  90220000	lbu	r2,(r1)
 1186  00001d40  60410020	seqi	r1,r2,#32
 1187  00001d44  14200034	bnez	r1,L75_LF2
 1188  00001d48  54000000	nop; delay slot nop
 1189  00001d4c  8fc10000	lw	r1,(r30)
 1190  00001d50  90220000	lbu	r2,(r1)
 1191  00001d54  60410009	seqi	r1,r2,#9
 1192  00001d58  14200020	bnez	r1,L75_LF2
 1193  00001d5c  54000000	nop; delay slot nop
 1194  00001d60  8fc10000	lw	r1,(r30)
 1195  00001d64  90220000	lbu	r2,(r1)
 1196  00001d68  6041000a	seqi	r1,r2,#10
 1197  00001d6c  1420000c	bnez	r1,L75_LF2
 1198  00001d70  54000000	nop; delay slot nop
 1199  00001d74  0800001c	j	L74_LF2
 1200  00001d78  54000000	nop; delay slot nop
 1201  00001d7c          	L75_LF2:
 1202  00001d7c  8fc20000	lw	r2,(r30)
 1203  00001d80  20410001	addi	r1,r2,#1
 1204  00001d84  00011020	add	r2,r0,r1
 1205  00001d88  afc20000	sw	(r30),r2
 1206  00001d8c  0bffffa8	j	L73_LF2
 1207  00001d90  54000000	nop; delay slot nop
 1208  00001d94          	L74_LF2:
 1209  00001d94  8fc10004	lw	r1,4(r30)
 1210  00001d98  64220000	snei	r2,r1,#0
 1211  00001d9c  10400010	beqz	r2,L76_LF2
 1212  00001da0  54000000	nop; delay slot nop
 1213  00001da4  8fc10004	lw	r1,4(r30)
 1214  00001da8  8fc20000	lw	r2,(r30)
 1215  00001dac  ac220000	sw	(r1),r2
 1216  00001db0          	L76_LF2:
 1217  00001db0  8fc10000	lw	r1,(r30)
 1218  00001db4  90220000	lbu	r2,(r1)
 1219  00001db8  64410000	snei	r1,r2,#0
 1220  00001dbc  14200010	bnez	r1,L77_LF2
 1221  00001dc0  54000000	nop; delay slot nop
 1222  00001dc4  8fc1fff4	lw	r1,-12(r30)
 1223  00001dc8  08000294	j	L72_LF2
 1224  00001dcc  54000000	nop; delay slot nop
 1225  00001dd0          	L77_LF2:
 1226  00001dd0  8fc10000	lw	r1,(r30)
 1227  00001dd4  90220000	lbu	r2,(r1)
 1228  00001dd8  6041002d	seqi	r1,r2,#45
 1229  00001ddc  10200024	beqz	r1,L78_LF2
 1230  00001de0  54000000	nop; delay slot nop
 1231  00001de4  2001ffff	addi	r1,r0,#-1
 1232  00001de8  afc1ffec	sw	-20(r30),r1
 1233  00001dec  8fc20000	lw	r2,(r30)
 1234  00001df0  20410001	addi	r1,r2,#1
 1235  00001df4  00011020	add	r2,r0,r1
 1236  00001df8  afc20000	sw	(r30),r2
 1237  00001dfc  0800000c	j	L79_LF2
 1238  00001e00  54000000	nop; delay slot nop
 1239  00001e04          	L78_LF2:
 1240  00001e04  20010001	addi	r1,r0,#1
 1241  00001e08  afc1ffec	sw	-20(r30),r1
 1242  00001e0c          	L79_LF2:
 1243  00001e0c  8fc10008	lw	r1,8(r30)
 1244  00001e10  64220000	snei	r2,r1,#0
 1245  00001e14  14400090	bnez	r2,L80_LF2
 1246  00001e18  54000000	nop; delay slot nop
 1247  00001e1c  8fc10000	lw	r1,(r30)
 1248  00001e20  90220000	lbu	r2,(r1)
 1249  00001e24  60410030	seqi	r1,r2,#48
 1250  00001e28  10200074	beqz	r1,L81_LF2
 1251  00001e2c  54000000	nop; delay slot nop
 1252  00001e30  8fc20000	lw	r2,(r30)
 1253  00001e34  20410001	addi	r1,r2,#1
 1254  00001e38  00011020	add	r2,r0,r1
 1255  00001e3c  afc20000	sw	(r30),r2
 1256  00001e40  8fc10000	lw	r1,(r30)
 1257  00001e44  90220000	lbu	r2,(r1)
 1258  00001e48  60410078	seqi	r1,r2,#120
 1259  00001e4c  14200020	bnez	r1,L83_LF2
 1260  00001e50  54000000	nop; delay slot nop
 1261  00001e54  8fc10000	lw	r1,(r30)
 1262  00001e58  90220000	lbu	r2,(r1)
 1263  00001e5c  60410058	seqi	r1,r2,#88
 1264  00001e60  1420000c	bnez	r1,L83_LF2
 1265  00001e64  54000000	nop; delay slot nop
 1266  00001e68  08000024	j	L82_LF2
 1267  00001e6c  54000000	nop; delay slot nop
 1268  00001e70          	L83_LF2:
 1269  00001e70  20010010	addi	r1,r0,#16
 1270  00001e74  afc10008	sw	8(r30),r1
 1271  00001e78  8fc20000	lw	r2,(r30)
 1272  00001e7c  20410001	addi	r1,r2,#1
 1273  00001e80  00011020	add	r2,r0,r1
 1274  00001e84  afc20000	sw	(r30),r2
 1275  00001e88  0800000c	j	L84_LF2
 1276  00001e8c  54000000	nop; delay slot nop
 1277  00001e90          	L82_LF2:
 1278  00001e90  20010008	addi	r1,r0,#8
 1279  00001e94  afc10008	sw	8(r30),r1
 1280  00001e98          	L84_LF2:
 1281  00001e98  0800000c	j	L80_LF2
 1282  00001e9c  54000000	nop; delay slot nop
 1283  00001ea0          	L81_LF2:
 1284  00001ea0  2001000a	addi	r1,r0,#10
 1285  00001ea4  afc10008	sw	8(r30),r1
 1286  00001ea8          	L85_LF2:
 1287  00001ea8          	L80_LF2:
 1288  00001ea8  8fc10008	lw	r1,8(r30)
 1289  00001eac  70220000	slei	r2,r1,#0
 1290  00001eb0  1440001c	bnez	r2,L87_LF2
 1291  00001eb4  54000000	nop; delay slot nop
 1292  00001eb8  8fc10008	lw	r1,8(r30)
 1293  00001ebc  6c220010	sgti	r2,r1,#16
 1294  00001ec0  1440000c	bnez	r2,L87_LF2
 1295  00001ec4  54000000	nop; delay slot nop
 1296  00001ec8  08000010	j	L86_LF2
 1297  00001ecc  54000000	nop; delay slot nop
 1298  00001ed0          	L87_LF2:
 1299  00001ed0  8fc1fff4	lw	r1,-12(r30)
 1300  00001ed4  08000188	j	L72_LF2
 1301  00001ed8  54000000	nop; delay slot nop
 1302  00001edc          	L86_LF2:
 1303  00001edc  54000000	nop
 1304  00001ee0          	L88_LF2:
 1305  00001ee0  8fc10000	lw	r1,(r30)
 1306  00001ee4  90220000	lbu	r2,(r1)
 1307  00001ee8  6c41002f	sgtui	r1,r2,#47
 1308  00001eec  10200030	beqz	r1,L91_LF2
 1309  00001ef0  54000000	nop; delay slot nop
 1310  00001ef4  8fc10000	lw	r1,(r30)
 1311  00001ef8  90220000	lbu	r2,(r1)
 1312  00001efc  70410039	sleui	r1,r2,#57
 1313  00001f00  1020001c	beqz	r1,L91_LF2
 1314  00001f04  54000000	nop; delay slot nop
 1315  00001f08  8fc10000	lw	r1,(r30)
 1316  00001f0c  90220000	lbu	r2,(r1)
 1317  00001f10  2041ffd0	addi	r1,r2,#-48
 1318  00001f14  afc1fff0	sw	-16(r30),r1
 1319  00001f18  0800008c	j	L92_LF2
 1320  00001f1c  54000000	nop; delay slot nop
 1321  00001f20          	L91_LF2:
 1322  00001f20  8fc10000	lw	r1,(r30)
 1323  00001f24  90220000	lbu	r2,(r1)
 1324  00001f28  6c410060	sgtui	r1,r2,#96
 1325  00001f2c  10200030	beqz	r1,L93_LF2
 1326  00001f30  54000000	nop; delay slot nop
 1327  00001f34  8fc10000	lw	r1,(r30)
 1328  00001f38  90220000	lbu	r2,(r1)
 1329  00001f3c  7041007a	sleui	r1,r2,#122
 1330  00001f40  1020001c	beqz	r1,L93_LF2
 1331  00001f44  54000000	nop; delay slot nop
 1332  00001f48  8fc10000	lw	r1,(r30)
 1333  00001f4c  90220000	lbu	r2,(r1)
 1334  00001f50  2041ffa9	addi	r1,r2,#-87
 1335  00001f54  afc1fff0	sw	-16(r30),r1
 1336  00001f58  0800004c	j	L92_LF2
 1337  00001f5c  54000000	nop; delay slot nop
 1338  00001f60          	L93_LF2:
 1339  00001f60  8fc10000	lw	r1,(r30)
 1340  00001f64  90220000	lbu	r2,(r1)
 1341  00001f68  6c410040	sgtui	r1,r2,#64
 1342  00001f6c  10200030	beqz	r1,L95_LF2
 1343  00001f70  54000000	nop; delay slot nop
 1344  00001f74  8fc10000	lw	r1,(r30)
 1345  00001f78  90220000	lbu	r2,(r1)
 1346  00001f7c  7041005a	sleui	r1,r2,#90
 1347  00001f80  1020001c	beqz	r1,L95_LF2
 1348  00001f84  54000000	nop; delay slot nop
 1349  00001f88  8fc10000	lw	r1,(r30)
 1350  00001f8c  90220000	lbu	r2,(r1)
 1351  00001f90  2041ffc9	addi	r1,r2,#-55
 1352  00001f94  afc1fff0	sw	-16(r30),r1
 1353  00001f98  0800000c	j	L92_LF2
 1354  00001f9c  54000000	nop; delay slot nop
 1355  00001fa0          	L95_LF2:
 1356  00001fa0  200103e8	addi	r1,r0,#1000
 1357  00001fa4  afc1fff0	sw	-16(r30),r1
 1358  00001fa8          	L96_LF2:
 1359  00001fa8          	L94_LF2:
 1360  00001fa8          	L92_LF2:
 1361  00001fa8  8fc1fff0	lw	r1,-16(r30)
 1362  00001fac  8fc20008	lw	r2,8(r30)
 1363  00001fb0  0022082a	slt	r1,r1,r2
 1364  00001fb4  10200040	beqz	r1,L90_LF2
 1365  00001fb8  54000000	nop; delay slot nop
 1366  00001fbc  8fc1fff4	lw	r1,-12(r30)
 1367  00001fc0  8fc20008	lw	r2,8(r30)
 1368  00001fc4  00200035	movi2fp	f0,r1
 1369  00001fc8  00400835	movi2fp	f1,r2
 1370  00001fcc  0401000e	mult	f0,f0,f1
 1371  00001fd0  00000834	movfp2i	r1,f0
 1372  00001fd4  afc1fff4	sw	-12(r30),r1
 1373  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1374  00001fdc  8fc2fff0	lw	r2,-16(r30)
 1375  00001fe0  00220820	add	r1,r1,r2
 1376  00001fe4  afc1fff4	sw	-12(r30),r1
 1377  00001fe8  8fc20000	lw	r2,(r30)
 1378  00001fec  20410001	addi	r1,r2,#1
 1379  00001ff0  00011020	add	r2,r0,r1
 1380  00001ff4  afc20000	sw	(r30),r2
 1381  00001ff8          	L97_LF2:
 1382  00001ff8          	L90_LF2:
 1383  00001ff8  8fc1fff0	lw	r1,-16(r30)
 1384  00001ffc  8fc20008	lw	r2,8(r30)
 1385  00002000  0022082a	slt	r1,r1,r2
 1386  00002004  1420000c	bnez	r1,L98_LF2
 1387  00002008  54000000	nop; delay slot nop
 1388  0000200c  0800000c	j	L89_LF2
 1389  00002010  54000000	nop; delay slot nop
 1390  00002014          	L98_LF2:
 1391  00002014  0bfffec8	j	L88_LF2
 1392  00002018  54000000	nop; delay slot nop
 1393  0000201c          	L89_LF2:
 1394  0000201c  8fc10004	lw	r1,4(r30)
 1395  00002020  64220000	snei	r2,r1,#0
 1396  00002024  10400010	beqz	r2,L99_LF2
 1397  00002028  54000000	nop; delay slot nop
 1398  0000202c  8fc10004	lw	r1,4(r30)
 1399  00002030  8fc20000	lw	r2,(r30)
 1400  00002034  ac220000	sw	(r1),r2
 1401  00002038          	L99_LF2:
 1402  00002038  8fc1fff4	lw	r1,-12(r30)
 1403  0000203c  8fc2ffec	lw	r2,-20(r30)
 1404  00002040  00200035	movi2fp	f0,r1
 1405  00002044  00400835	movi2fp	f1,r2
 1406  00002048  0401000e	mult	f0,f0,f1
 1407  0000204c  00000834	movfp2i	r1,f0
 1408  00002050  afc1fff4	sw	-12(r30),r1
 1409  00002054  8fc1fff4	lw	r1,-12(r30)
 1410  00002058  08000004	j	L72_LF2
 1411  0000205c  54000000	nop; delay slot nop
 1412  00002060          	L72_LF2:
 1413  00002060  8fa20000	lw	r2,0(r29)
 1414  00002064  8fdffff8	lw	r31,-8(r30)
 1415  00002068  001ee820	add	r29,r0,r30
 1416  0000206c  8fdefffc	lw	r30,-4(r30)
 1417  00002070  4be00000	jr	r31
 1418  00002074  54000000	nop
 1419  00002078          	.endproc _dstrtol
 1420  00002078          	.align 2
 1421  00002078          	.proc _bcopy
 1422  00002078          	.global _bcopy
 1423  00002078          	_bcopy:
 1424                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1425  00002078  afbefffc	sw	-4(r29),r30; push fp
 1426  0000207c  001df020	add	r30,r0,r29; fp = sp
 1427  00002080  afbffff8	sw	-8(r29),r31; push ret addr
 1428  00002084  2fbd0010	subui	r29,r29,#16; alloc local storage
 1429  00002088  afa20000	sw	0(r29),r2
 1430  0000208c  afa30004	sw	4(r29),r3
 1431  00002090  54000000	nop
 1432  00002094          	L101_LF2:
 1433  00002094  8fc10008	lw	r1,8(r30)
 1434  00002098  2022ffff	addi	r2,r1,#-1
 1435  0000209c  afc20008	sw	8(r30),r2
 1436  000020a0  6c210000	sgti	r1,r1,#0
 1437  000020a4  1420000c	bnez	r1,L103_LF2
 1438  000020a8  54000000	nop; delay slot nop
 1439  000020ac  0800002c	j	L102_LF2
 1440  000020b0  54000000	nop; delay slot nop
 1441  000020b4          	L103_LF2:
 1442  000020b4  8fc10004	lw	r1,4(r30)
 1443  000020b8  20220001	addi	r2,r1,#1
 1444  000020bc  afc20004	sw	4(r30),r2
 1445  000020c0  8fc20000	lw	r2,(r30)
 1446  000020c4  20430001	addi	r3,r2,#1
 1447  000020c8  afc30000	sw	(r30),r3
 1448  000020cc  80420000	lb	r2,(r2)
 1449  000020d0  a0220000	sb	(r1),r2
 1450  000020d4  0bffffbc	j	L101_LF2
 1451  000020d8  54000000	nop; delay slot nop
 1452  000020dc          	L102_LF2:
 1453  000020dc          	L100_LF2:
 1454  000020dc  8fa20000	lw	r2,0(r29)
 1455  000020e0  8fa30004	lw	r3,4(r29)
 1456  000020e4  8fdffff8	lw	r31,-8(r30)
 1457  000020e8  001ee820	add	r29,r0,r30
 1458  000020ec  8fdefffc	lw	r30,-4(r30)
 1459  000020f0  4be00000	jr	r31
 1460  000020f4  54000000	nop
 1461  000020f8          	.endproc _bcopy
 1462  000020f8          	.align 2
 1463  000020f8          	.proc _bzero
 1464  000020f8          	.global _bzero
 1465  000020f8          	_bzero:
 1466                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1467  000020f8  afbefffc	sw	-4(r29),r30; push fp
 1468  000020fc  001df020	add	r30,r0,r29; fp = sp
 1469  00002100  afbffff8	sw	-8(r29),r31; push ret addr
 1470  00002104  2fbd0010	subui	r29,r29,#16; alloc local storage
 1471  00002108  afa20000	sw	0(r29),r2
 1472  0000210c  54000000	nop
 1473  00002110          	L105_LF2:
 1474  00002110  8fc10004	lw	r1,4(r30)
 1475  00002114  2022ffff	addi	r2,r1,#-1
 1476  00002118  afc20004	sw	4(r30),r2
 1477  0000211c  6c210000	sgti	r1,r1,#0
 1478  00002120  1420000c	bnez	r1,L107_LF2
 1479  00002124  54000000	nop; delay slot nop
 1480  00002128  08000020	j	L106_LF2
 1481  0000212c  54000000	nop; delay slot nop
 1482  00002130          	L107_LF2:
 1483  00002130  8fc10000	lw	r1,(r30)
 1484  00002134  20220001	addi	r2,r1,#1
 1485  00002138  afc20000	sw	(r30),r2
 1486  0000213c  20020000	addi	r2,r0,(#0x0)&0xff
 1487  00002140  a0220000	sb	(r1),r2
 1488  00002144  0bffffc8	j	L105_LF2
 1489  00002148  54000000	nop; delay slot nop
 1490  0000214c          	L106_LF2:
 1491  0000214c          	L104_LF2:
 1492  0000214c  8fa20000	lw	r2,0(r29)
 1493  00002150  8fdffff8	lw	r31,-8(r30)
 1494  00002154  001ee820	add	r29,r0,r30
 1495  00002158  8fdefffc	lw	r30,-4(r30)
 1496  0000215c  4be00000	jr	r31
 1497  00002160  54000000	nop
 1498  00002164          	.endproc _bzero
 1499  00002164          	.align 2
 1500  00002164          	.proc _min
 1501  00002164          	.global _min
 1502  00002164          	_min:
 1503                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1504  00002164  afbefffc	sw	-4(r29),r30; push fp
 1505  00002168  001df020	add	r30,r0,r29; fp = sp
 1506  0000216c  afbffff8	sw	-8(r29),r31; push ret addr
 1507  00002170  2fbd0010	subui	r29,r29,#16; alloc local storage
 1508  00002174  afa20000	sw	0(r29),r2
 1509  00002178  afa30004	sw	4(r29),r3
 1510  0000217c  8fc10000	lw	r1,(r30)
 1511  00002180  8fc20004	lw	r2,4(r30)
 1512  00002184  0022182c	sle	r3,r1,r2
 1513  00002188  14600008	bnez	r3,L109_LF2
 1514  0000218c  54000000	nop; delay slot nop
 1515  00002190  8fc10004	lw	r1,4(r30)
 1516  00002194          	L109_LF2:
 1517  00002194  08000004	j	L108_LF2
 1518  00002198  54000000	nop; delay slot nop
 1519  0000219c          	L108_LF2:
 1520  0000219c  8fa20000	lw	r2,0(r29)
 1521  000021a0  8fa30004	lw	r3,4(r29)
 1522  000021a4  8fdffff8	lw	r31,-8(r30)
 1523  000021a8  001ee820	add	r29,r0,r30
 1524  000021ac  8fdefffc	lw	r30,-4(r30)
 1525  000021b0  4be00000	jr	r31
 1526  000021b4  54000000	nop
 1527  000021b8          	.endproc _min
 1528                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1529                      ;;;
 1530                      ;;; Most of the traps are called in files from libtraps.
 1533  000021b8          	.align 2
 1534  000021b8          	.proc _exit
 1535  000021b8          	.global _exit
 1536  000021b8          	_exit:
 1537  000021b8  44000300	trap	#0x300
 1538  000021bc  4be00000	jr	r31
 1539  000021c0  54000000	nop
 1540  000021c4          	.endproc _exit
 1542                      ; for the benefit of gcc.
 1543  000021c4          	.proc ___main
 1544  000021c4          	.global ___main
 1545  000021c4          	___main:
 1546  000021c4  4be00000	jr	r31
 1547  000021c8  54000000	nop
 1548  000021cc          	.endproc ___main
 1549  000021cc          	.text
 1550  000021cc          	.global _etext
 1551  000021cc          	_etext:
 1552  000021cc          	.align 3
 1553  000021d0          	.data
 1554  000030d5          	.global _edata
 1555  000030d5          	_edata:
