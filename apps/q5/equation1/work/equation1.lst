 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 174
    4                      ; Text size: 4436
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e0a00  	
   86  0000304b          	.align 2
   87  0000304c          	LC2_LF0:
   88  0000304c  32204832	.ascii "2 H2O -> 2 H2 + O2 reacted, PID: %d\n\000"
   88  00003050  4f202d3e	
   88  00003054  20322048	
   88  00003058  32202b20	
   88  0000305c  4f322072	
   88  00003060  65616374	
   88  00003064  65642c20	
   88  00003068  5049443a	
   88  0000306c  2025640a	
   88  00003070  00      	
   89  00003071          	.align 2
   90  00003074          	LC3_LF0:
   91  00003074  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   91  00003078  73656d61	
   91  0000307c  70686f72	
   91  00003080  6520735f	
   91  00003084  70726f63	
   91  00003088  735f636f	
   91  0000308c  6d706c65	
   91  00003090  74656420	
   91  00003094  28256429	
   91  00003098  20696e20	
   91  0000309c  00      	
   92  0000309d          	.align 2
   93  000030a0          	LC4_LF0:
   94  000030a0  2c206578	.ascii ", exiting...\n\000"
   94  000030a4  6974696e	
   94  000030a8  672e2e2e	
   94  000030ac  0a00    	
   95  000030ae          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc60004	lw	r6,4(r30)
  107  000010ec  0c00105c	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410006	snei	r1,r2,#6
  110  000010f8  1020004c	beqz	r1,L14_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  114  00001108  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  115  0000110c  afa90000	sw	(r29),r9
  116  00001110  0c000230	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  8cc90000	lw	r9,(r6)
  119  0000111c  afa90000	sw	(r29),r9
  120  00001120  0c000220	jal	_Printf
  121  00001124  54000000	nop; not filled.
  122  00001128  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  123  0000112c  25293008	addui	r9,r9,(LC1_LF0)&0xffff
  124  00001130  afa90000	sw	(r29),r9
  125  00001134  0c00020c	jal	_Printf
  126  00001138  54000000	nop; not filled.
  127  0000113c  0c0002b8	jal	_Exit
  128  00001140  54000000	nop; not filled.
  129  00001144  23bd0008	addi	r29,r29,#8
  130  00001148          	L14_LF0:
  131  00001148  23bdfff0	addi	r29,r29,#-16
  132  0000114c  8cc90004	lw	r9,4(r6)
  133  00001150  afa90000	sw	(r29),r9
  134  00001154  20090000	addi	r9,r0,#0
  135  00001158  afa90004	sw	4(r29),r9
  136  0000115c  2009000a	addi	r9,r0,#10
  137  00001160  afa90008	sw	8(r29),r9
  138  00001164  0c000b3c	jal	_dstrtol
  139  00001168  54000000	nop; not filled.
  140  0000116c  00014020	add	r8,r0,r1
  141  00001170  8cc90008	lw	r9,8(r6)
  142  00001174  afa90000	sw	(r29),r9
  143  00001178  20090000	addi	r9,r0,#0
  144  0000117c  afa90004	sw	4(r29),r9
  145  00001180  2009000a	addi	r9,r0,#10
  146  00001184  afa90008	sw	8(r29),r9
  147  00001188  0c000b18	jal	_dstrtol
  148  0000118c  54000000	nop; not filled.
  149  00001190  00012820	add	r5,r0,r1
  150  00001194  8cc9000c	lw	r9,12(r6)
  151  00001198  afa90000	sw	(r29),r9
  152  0000119c  20090000	addi	r9,r0,#0
  153  000011a0  afa90004	sw	4(r29),r9
  154  000011a4  2009000a	addi	r9,r0,#10
  155  000011a8  afa90008	sw	8(r29),r9
  156  000011ac  0c000af4	jal	_dstrtol
  157  000011b0  54000000	nop; not filled.
  158  000011b4  00012020	add	r4,r0,r1
  159  000011b8  8cc90010	lw	r9,16(r6)
  160  000011bc  afa90000	sw	(r29),r9
  161  000011c0  20090000	addi	r9,r0,#0
  162  000011c4  afa90004	sw	4(r29),r9
  163  000011c8  2009000a	addi	r9,r0,#10
  164  000011cc  afa90008	sw	8(r29),r9
  165  000011d0  0c000ad0	jal	_dstrtol
  166  000011d4  54000000	nop; not filled.
  167  000011d8  00011820	add	r3,r0,r1
  168  000011dc  8cc90014	lw	r9,20(r6)
  169  000011e0  afa90000	sw	(r29),r9
  170  000011e4  20090000	addi	r9,r0,#0
  171  000011e8  afa90004	sw	4(r29),r9
  172  000011ec  2009000a	addi	r9,r0,#10
  173  000011f0  afa90008	sw	8(r29),r9
  174  000011f4  0c000aac	jal	_dstrtol
  175  000011f8  54000000	nop; not filled.
  176  000011fc  00013820	add	r7,r0,r1
  177  00001200  20020000	addi	r2,r0,#0
  178  00001204  23bd0010	addi	r29,r29,#16
  179  00001208  0045082a	slt	r1,r2,r5
  180  0000120c  10200078	beqz	r1,L16_LF0
  181  00001210  54000000	nop; not filled.
  182  00001214          	L18_LF0:
  183  00001214  23bdfff8	addi	r29,r29,#-8
  184  00001218  afa40000	sw	(r29),r4
  185  0000121c  0c00016c	jal	_sem_wait
  186  00001220  54000000	nop; not filled.
  187  00001224  afa40000	sw	(r29),r4
  188  00001228  0c000160	jal	_sem_wait
  189  0000122c  54000000	nop; not filled.
  190  00001230  0c00011c	jal	_getpid
  191  00001234  54000000	nop; not filled.
  192  00001238  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  193  0000123c  2529304c	addui	r9,r9,(LC2_LF0)&0xffff
  194  00001240  afa90000	sw	(r29),r9
  195  00001244  afa10004	sw	4(r29),r1
  196  00001248  0c0000f8	jal	_Printf
  197  0000124c  54000000	nop; not filled.
  198  00001250  afa30000	sw	(r29),r3
  199  00001254  0c000140	jal	_sem_signal
  200  00001258  54000000	nop; not filled.
  201  0000125c  afa30000	sw	(r29),r3
  202  00001260  0c000134	jal	_sem_signal
  203  00001264  54000000	nop; not filled.
  204  00001268  afa70000	sw	(r29),r7
  205  0000126c  0c000128	jal	_sem_signal
  206  00001270  54000000	nop; not filled.
  207  00001274  23bd0008	addi	r29,r29,#8
  208  00001278  20420001	addi	r2,r2,#1
  209  0000127c  0045082a	slt	r1,r2,r5
  210  00001280  1420ff90	bnez	r1,L18_LF0
  211  00001284  54000000	nop; not filled.
  212  00001288          	L16_LF0:
  213  00001288  23bdfff8	addi	r29,r29,#-8
  214  0000128c  afa80000	sw	(r29),r8
  215  00001290  0c000104	jal	_sem_signal
  216  00001294  54000000	nop; not filled.
  217  00001298  23bd0008	addi	r29,r29,#8
  218  0000129c  64210001	snei	r1,r1,#1
  219  000012a0  10200050	beqz	r1,L20_LF0
  220  000012a4  54000000	nop; not filled.
  221  000012a8  23bdfff8	addi	r29,r29,#-8
  222  000012ac  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  223  000012b0  25293074	addui	r9,r9,(LC3_LF0)&0xffff
  224  000012b4  afa90000	sw	(r29),r9
  225  000012b8  afa80004	sw	4(r29),r8
  226  000012bc  0c000084	jal	_Printf
  227  000012c0  54000000	nop; not filled.
  228  000012c4  8cc60000	lw	r6,(r6)
  229  000012c8  afa60000	sw	(r29),r6
  230  000012cc  0c000074	jal	_Printf
  231  000012d0  54000000	nop; not filled.
  232  000012d4  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  233  000012d8  252930a0	addui	r9,r9,(LC4_LF0)&0xffff
  234  000012dc  afa90000	sw	(r29),r9
  235  000012e0  0c000060	jal	_Printf
  236  000012e4  54000000	nop; not filled.
  237  000012e8  0c00010c	jal	_Exit
  238  000012ec  54000000	nop; not filled.
  239  000012f0  23bd0008	addi	r29,r29,#8
  240  000012f4          	L20_LF0:
  241  000012f4  0c000e48	jal	_exit
  242  000012f8  54000000	nop
  243  000012fc          	.endproc _main
  244                      ;;;
  245                      ;;; Stub functions for DLX traps.
  246                      ;;;
  247                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  248                      ;;;
  249                      ;;; The traps such as Open and Close
  250                      ;;; (note the capital letters) are for use by user programs.  The traps
  251                      ;;; with names such as open and close (lower case) are for use by the OS.
  252                      ;;;
  255  000012fc          	.align 2
  257                      ;;; The following are the traps to be used by user-level programs
  258                      ;;;
  260  000012fc          	.align 2
  261  000012fc          	.proc _Open
  262  000012fc          	.global _Open
  263  000012fc          	_Open:
  264                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  265                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  266                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  267  000012fc  44000213	trap	#0x213
  268  00001300  4be00000	jr	r31
  269  00001304  54000000	nop
  270  00001308          	.endproc _Open
  272  00001308          	.proc _Close
  273  00001308          	.global _Close
  274  00001308          	_Close:
  275  00001308  44000214	trap	#0x214
  276  0000130c  4be00000	jr	r31
  277  00001310  54000000	nop
  278  00001314          	.endproc _Close
  280  00001314          	.proc _Read
  281  00001314          	.global _Read
  282  00001314          	_Read:
  283  00001314  44000210	trap	#0x210
  284  00001318  4be00000	jr	r31
  285  0000131c  54000000	nop
  286  00001320          	.endproc _Read
  288  00001320          	.proc _Write
  289  00001320          	.global _Write
  290  00001320          	_Write:
  291  00001320  44000211	trap	#0x211
  292  00001324  4be00000	jr	r31
  293  00001328  54000000	nop
  294  0000132c          	.endproc _Write
  296  0000132c          	.proc _Lseek
  297  0000132c          	.global _Lseek
  298  0000132c          	_Lseek:
  299  0000132c  44000212	trap	#0x212
  300  00001330  4be00000	jr	r31
  301  00001334  54000000	nop
  302  00001338          	.endproc _Lseek
  304  00001338          	.proc _Putchar
  305  00001338          	.global _Putchar
  306  00001338          	_Putchar:
  307  00001338  44000280	trap	#0x280
  308  0000133c  4be00000	jr	r31
  309  00001340  54000000	nop
  310  00001344          	.endproc _Putchar
  312  00001344          	.proc _Printf
  313  00001344          	.global _Printf
  314  00001344          	_Printf:
  315  00001344  44000201	trap	#0x201
  316  00001348  4be00000	jr	r31
  317  0000134c  54000000	nop
  318  00001350          	.endproc _Printf
  320  00001350          	.proc _getpid
  321  00001350          	.global _getpid
  322  00001350          	_getpid:
  323  00001350  44000431	trap	#0x431
  324  00001354  4be00000	jr	r31
  325  00001358  54000000	nop
  326  0000135c          	.endproc _getpid
  328  0000135c          	.proc _process_create
  329  0000135c          	.global _process_create
  330  0000135c          	_process_create:
  331  0000135c  44000432	trap	#0x432
  332  00001360  4be00000	jr	r31
  333  00001364  54000000	nop
  334  00001368          	.endproc _process_create
  336  00001368          	.proc _shmget
  337  00001368          	.global _shmget
  338  00001368          	_shmget:
  339  00001368  44000440	trap	#0x440
  340  0000136c  4be00000	jr	r31
  341  00001370  54000000	nop
  342  00001374          	.endproc _shmget
  344  00001374          	.proc _shmat
  345  00001374          	.global _shmat
  346  00001374          	_shmat:
  347  00001374  44000441	trap	#0x441
  348  00001378  4be00000	jr	r31
  349  0000137c  54000000	nop
  350  00001380          	.endproc _shmat
  352  00001380          	.proc _sem_create
  353  00001380          	.global _sem_create
  354  00001380          	_sem_create:
  355  00001380  44000450	trap	#0x450
  356  00001384  4be00000	jr	r31
  357  00001388  54000000	nop
  358  0000138c          	.endproc _sem_create
  360  0000138c          	.proc _sem_wait
  361  0000138c          	.global _sem_wait
  362  0000138c          	_sem_wait:
  363  0000138c  44000451	trap	#0x451
  364  00001390  4be00000	jr	r31
  365  00001394  54000000	nop
  366  00001398          	.endproc _sem_wait
  368  00001398          	.proc _sem_signal
  369  00001398          	.global _sem_signal
  370  00001398          	_sem_signal:
  371  00001398  44000452	trap	#0x452
  372  0000139c  4be00000	jr	r31
  373  000013a0  54000000	nop
  374  000013a4          	.endproc _sem_signal
  376  000013a4          	.proc _lock_create
  377  000013a4          	.global _lock_create
  378  000013a4          	_lock_create:
  379  000013a4  44000453	trap	#0x453
  380  000013a8  4be00000	jr	r31
  381  000013ac  54000000	nop
  382  000013b0          	.endproc _lock_create
  384  000013b0          	.proc _lock_acquire
  385  000013b0          	.global _lock_acquire
  386  000013b0          	_lock_acquire:
  387  000013b0  44000454	trap	#0x454
  388  000013b4  4be00000	jr	r31
  389  000013b8  54000000	nop
  390  000013bc          	.endproc _lock_acquire
  392  000013bc          	.proc _lock_release
  393  000013bc          	.global _lock_release
  394  000013bc          	_lock_release:
  395  000013bc  44000455	trap	#0x455
  396  000013c0  4be00000	jr	r31
  397  000013c4  54000000	nop
  398  000013c8          	.endproc _lock_release
  400  000013c8          	.proc _cond_create
  401  000013c8          	.global _cond_create
  402  000013c8          	_cond_create:
  403  000013c8  44000456	trap	#0x456
  404  000013cc  4be00000	jr	r31
  405  000013d0  54000000	nop
  406  000013d4          	.endproc _cond_create
  408  000013d4          	.proc _cond_wait
  409  000013d4          	.global _cond_wait
  410  000013d4          	_cond_wait:
  411  000013d4  44000457	trap	#0x457
  412  000013d8  4be00000	jr	r31
  413  000013dc  54000000	nop
  414  000013e0          	.endproc _cond_wait
  416  000013e0          	.proc _cond_signal
  417  000013e0          	.global _cond_signal
  418  000013e0          	_cond_signal:
  419  000013e0  44000458	trap	#0x458
  420  000013e4  4be00000	jr	r31
  421  000013e8  54000000	nop
  422  000013ec          	.endproc _cond_signal
  424  000013ec          	.proc _cond_broadcast
  425  000013ec          	.global _cond_broadcast
  426  000013ec          	_cond_broadcast:
  427  000013ec  44000459	trap	#0x459
  428  000013f0  4be00000	jr	r31
  429  000013f4  54000000	nop
  430  000013f8          	.endproc _cond_broadcast
  432  000013f8          	.proc _Exit
  433  000013f8          	.global _Exit
  434  000013f8          	_Exit:
  435  000013f8  44000500	trap	#0x500
  436  000013fc  4be00000	jr	r31
  437  00001400  54000000	nop
  438  00001404          	.endproc _Exit
  439                      ; Compiled by GCC
  441  00001404          	.align 2
  442  00001404          	.proc _isspace
  443  00001404          	.global _isspace
  444  00001404          	_isspace:
  445                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  446  00001404  afbefffc	sw	-4(r29),r30; push fp
  447  00001408  001df020	add	r30,r0,r29; fp = sp
  448  0000140c  afbffff8	sw	-8(r29),r31; push ret addr
  449  00001410  2fbd0018	subui	r29,r29,#24; alloc local storage
  450  00001414  afa20000	sw	0(r29),r2
  451  00001418  afa30004	sw	4(r29),r3
  452  0000141c  afa40008	sw	8(r29),r4
  453  00001420  83c20003	lb	r2,3(r30)
  454  00001424  20010000	addi	r1,r0,#0
  455  00001428  304300ff	andi	r3,r2,#0x00ff
  456  0000142c  60640020	seqi	r4,r3,#32
  457  00001430  1480002c	bnez	r4,L3_LF2
  458  00001434  54000000	nop; delay slot nop
  459  00001438  304300ff	andi	r3,r2,#0x00ff
  460  0000143c  60640009	seqi	r4,r3,#9
  461  00001440  1480001c	bnez	r4,L3_LF2
  462  00001444  54000000	nop; delay slot nop
  463  00001448  304300ff	andi	r3,r2,#0x00ff
  464  0000144c  6064000a	seqi	r4,r3,#10
  465  00001450  1480000c	bnez	r4,L3_LF2
  466  00001454  54000000	nop; delay slot nop
  467  00001458  08000008	j	L2_LF2
  468  0000145c  54000000	nop; delay slot nop
  469  00001460          	L3_LF2:
  470  00001460  20010001	addi	r1,r0,#1
  471  00001464          	L2_LF2:
  472  00001464  08000004	j	L1_LF2
  473  00001468  54000000	nop; delay slot nop
  474  0000146c          	L1_LF2:
  475  0000146c  8fa20000	lw	r2,0(r29)
  476  00001470  8fa30004	lw	r3,4(r29)
  477  00001474  8fa40008	lw	r4,8(r29)
  478  00001478  8fdffff8	lw	r31,-8(r30)
  479  0000147c  001ee820	add	r29,r0,r30
  480  00001480  8fdefffc	lw	r30,-4(r30)
  481  00001484  4be00000	jr	r31
  482  00001488  54000000	nop
  483  0000148c          	.endproc _isspace
  484  0000148c          	.align 2
  485  0000148c          	.proc _isxdigit
  486  0000148c          	.global _isxdigit
  487  0000148c          	_isxdigit:
  488                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  489  0000148c  afbefffc	sw	-4(r29),r30; push fp
  490  00001490  001df020	add	r30,r0,r29; fp = sp
  491  00001494  afbffff8	sw	-8(r29),r31; push ret addr
  492  00001498  2fbd0018	subui	r29,r29,#24; alloc local storage
  493  0000149c  afa20000	sw	0(r29),r2
  494  000014a0  afa30004	sw	4(r29),r3
  495  000014a4  afa40008	sw	8(r29),r4
  496  000014a8  83c20003	lb	r2,3(r30)
  497  000014ac  20010000	addi	r1,r0,#0
  498  000014b0  304300ff	andi	r3,r2,#0x00ff
  499  000014b4  6c64002f	sgtui	r4,r3,#47
  500  000014b8  1080001c	beqz	r4,L7_LF2
  501  000014bc  54000000	nop; delay slot nop
  502  000014c0  304300ff	andi	r3,r2,#0x00ff
  503  000014c4  70640039	sleui	r4,r3,#57
  504  000014c8  1480005c	bnez	r4,L6_LF2
  505  000014cc  54000000	nop; delay slot nop
  506  000014d0  08000004	j	L7_LF2
  507  000014d4  54000000	nop; delay slot nop
  508  000014d8          	L7_LF2:
  509  000014d8  304300ff	andi	r3,r2,#0x00ff
  510  000014dc  6c640060	sgtui	r4,r3,#96
  511  000014e0  1080001c	beqz	r4,L8_LF2
  512  000014e4  54000000	nop; delay slot nop
  513  000014e8  304300ff	andi	r3,r2,#0x00ff
  514  000014ec  70640066	sleui	r4,r3,#102
  515  000014f0  14800034	bnez	r4,L6_LF2
  516  000014f4  54000000	nop; delay slot nop
  517  000014f8  08000004	j	L8_LF2
  518  000014fc  54000000	nop; delay slot nop
  519  00001500          	L8_LF2:
  520  00001500  304300ff	andi	r3,r2,#0x00ff
  521  00001504  6c640040	sgtui	r4,r3,#64
  522  00001508  10800020	beqz	r4,L5_LF2
  523  0000150c  54000000	nop; delay slot nop
  524  00001510  304300ff	andi	r3,r2,#0x00ff
  525  00001514  70640041	sleui	r4,r3,#65
  526  00001518  1480000c	bnez	r4,L6_LF2
  527  0000151c  54000000	nop; delay slot nop
  528  00001520  08000008	j	L5_LF2
  529  00001524  54000000	nop; delay slot nop
  530  00001528          	L6_LF2:
  531  00001528  20010001	addi	r1,r0,#1
  532  0000152c          	L5_LF2:
  533  0000152c  08000004	j	L4_LF2
  534  00001530  54000000	nop; delay slot nop
  535  00001534          	L4_LF2:
  536  00001534  8fa20000	lw	r2,0(r29)
  537  00001538  8fa30004	lw	r3,4(r29)
  538  0000153c  8fa40008	lw	r4,8(r29)
  539  00001540  8fdffff8	lw	r31,-8(r30)
  540  00001544  001ee820	add	r29,r0,r30
  541  00001548  8fdefffc	lw	r30,-4(r30)
  542  0000154c  4be00000	jr	r31
  543  00001550  54000000	nop
  544  00001554          	.endproc _isxdigit
  545  00001554          	.align 2
  546  00001554          	.proc _dstrcpy
  547  00001554          	.global _dstrcpy
  548  00001554          	_dstrcpy:
  549                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  550  00001554  afbefffc	sw	-4(r29),r30; push fp
  551  00001558  001df020	add	r30,r0,r29; fp = sp
  552  0000155c  afbffff8	sw	-8(r29),r31; push ret addr
  553  00001560  2fbd0018	subui	r29,r29,#24; alloc local storage
  554  00001564  afa20000	sw	0(r29),r2
  555  00001568  afa30004	sw	4(r29),r3
  556  0000156c  8fc10000	lw	r1,(r30)
  557  00001570  afc1fff4	sw	-12(r30),r1
  558  00001574          	L10_LF2:
  559  00001574  8fc10000	lw	r1,(r30)
  560  00001578  20220001	addi	r2,r1,#1
  561  0000157c  afc20000	sw	(r30),r2
  562  00001580  8fc20004	lw	r2,4(r30)
  563  00001584  20430001	addi	r3,r2,#1
  564  00001588  afc30004	sw	4(r30),r3
  565  0000158c  80420000	lb	r2,(r2)
  566  00001590  a0220000	sb	(r1),r2
  567  00001594  a3c2fff3	sb	-13(r30),r2
  568  00001598          	L12_LF2:
  569  00001598  93c1fff3	lbu	r1,-13(r30)
  570  0000159c  64220000	snei	r2,r1,#0
  571  000015a0  1440000c	bnez	r2,L13_LF2
  572  000015a4  54000000	nop; delay slot nop
  573  000015a8  0800000c	j	L11_LF2
  574  000015ac  54000000	nop; delay slot nop
  575  000015b0          	L13_LF2:
  576  000015b0  0bffffc0	j	L10_LF2
  577  000015b4  54000000	nop; delay slot nop
  578  000015b8          	L11_LF2:
  579  000015b8  8fc1fff4	lw	r1,-12(r30)
  580  000015bc  08000004	j	L9_LF2
  581  000015c0  54000000	nop; delay slot nop
  582  000015c4          	L9_LF2:
  583  000015c4  8fa20000	lw	r2,0(r29)
  584  000015c8  8fa30004	lw	r3,4(r29)
  585  000015cc  8fdffff8	lw	r31,-8(r30)
  586  000015d0  001ee820	add	r29,r0,r30
  587  000015d4  8fdefffc	lw	r30,-4(r30)
  588  000015d8  4be00000	jr	r31
  589  000015dc  54000000	nop
  590  000015e0          	.endproc _dstrcpy
  591  000015e0          	.align 2
  592  000015e0          	.proc _dstrncpy
  593  000015e0          	.global _dstrncpy
  594  000015e0          	_dstrncpy:
  595                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  596  000015e0  afbefffc	sw	-4(r29),r30; push fp
  597  000015e4  001df020	add	r30,r0,r29; fp = sp
  598  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  599  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  600  000015f0  afa20000	sw	0(r29),r2
  601  000015f4  afa30004	sw	4(r29),r3
  602  000015f8  8fc10000	lw	r1,(r30)
  603  000015fc  afc1fff4	sw	-12(r30),r1
  604  00001600          	L15_LF2:
  605  00001600  8fc10008	lw	r1,8(r30)
  606  00001604  2022ffff	addi	r2,r1,#-1
  607  00001608  afc20008	sw	8(r30),r2
  608  0000160c  70210000	slei	r1,r1,#0
  609  00001610  1020000c	beqz	r1,L18_LF2
  610  00001614  54000000	nop; delay slot nop
  611  00001618  08000048	j	L16_LF2
  612  0000161c  54000000	nop; delay slot nop
  613  00001620          	L18_LF2:
  614  00001620  8fc10000	lw	r1,(r30)
  615  00001624  20220001	addi	r2,r1,#1
  616  00001628  afc20000	sw	(r30),r2
  617  0000162c  8fc20004	lw	r2,4(r30)
  618  00001630  20430001	addi	r3,r2,#1
  619  00001634  afc30004	sw	4(r30),r3
  620  00001638  80420000	lb	r2,(r2)
  621  0000163c  a0220000	sb	(r1),r2
  622  00001640  a3c2fff3	sb	-13(r30),r2
  623  00001644          	L17_LF2:
  624  00001644  93c1fff3	lbu	r1,-13(r30)
  625  00001648  64220000	snei	r2,r1,#0
  626  0000164c  1440000c	bnez	r2,L19_LF2
  627  00001650  54000000	nop; delay slot nop
  628  00001654  0800000c	j	L16_LF2
  629  00001658  54000000	nop; delay slot nop
  630  0000165c          	L19_LF2:
  631  0000165c  0bffffa0	j	L15_LF2
  632  00001660  54000000	nop; delay slot nop
  633  00001664          	L16_LF2:
  634  00001664  8fc1fff4	lw	r1,-12(r30)
  635  00001668  08000004	j	L14_LF2
  636  0000166c  54000000	nop; delay slot nop
  637  00001670          	L14_LF2:
  638  00001670  8fa20000	lw	r2,0(r29)
  639  00001674  8fa30004	lw	r3,4(r29)
  640  00001678  8fdffff8	lw	r31,-8(r30)
  641  0000167c  001ee820	add	r29,r0,r30
  642  00001680  8fdefffc	lw	r30,-4(r30)
  643  00001684  4be00000	jr	r31
  644  00001688  54000000	nop
  645  0000168c          	.endproc _dstrncpy
  646  0000168c          	.align 2
  647  0000168c          	.proc _dstrcat
  648  0000168c          	.global _dstrcat
  649  0000168c          	_dstrcat:
  650                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  651  0000168c  afbefffc	sw	-4(r29),r30; push fp
  652  00001690  001df020	add	r30,r0,r29; fp = sp
  653  00001694  afbffff8	sw	-8(r29),r31; push ret addr
  654  00001698  2fbd0018	subui	r29,r29,#24; alloc local storage
  655  0000169c  afa20000	sw	0(r29),r2
  656  000016a0  8fc10000	lw	r1,(r30)
  657  000016a4  afc1fff4	sw	-12(r30),r1
  658  000016a8          	L21_LF2:
  659  000016a8  8fc10000	lw	r1,(r30)
  660  000016ac  90220000	lbu	r2,(r1)
  661  000016b0  64410000	snei	r1,r2,#0
  662  000016b4  1420000c	bnez	r1,L23_LF2
  663  000016b8  54000000	nop; delay slot nop
  664  000016bc  0800001c	j	L22_LF2
  665  000016c0  54000000	nop; delay slot nop
  666  000016c4          	L23_LF2:
  667  000016c4  8fc20000	lw	r2,(r30)
  668  000016c8  20410001	addi	r1,r2,#1
  669  000016cc  00011020	add	r2,r0,r1
  670  000016d0  afc20000	sw	(r30),r2
  671  000016d4  0bffffd0	j	L21_LF2
  672  000016d8  54000000	nop; delay slot nop
  673  000016dc          	L22_LF2:
  674  000016dc  23bdfff8	addi	r29,r29,#-8
  675  000016e0  001d0820	add	r1,r0,r29
  676  000016e4  8fc20000	lw	r2,(r30)
  677  000016e8  ac220000	sw	(r1),r2
  678  000016ec  8fc20004	lw	r2,4(r30)
  679  000016f0  ac220004	sw	4(r1),r2
  680  000016f4  0ffffe5c	jal	_dstrcpy
  681  000016f8  54000000	nop; delay slot nop
  682  000016fc  23bd0008	addi	r29,r29,#8
  683  00001700  8fc1fff4	lw	r1,-12(r30)
  684  00001704  08000004	j	L20_LF2
  685  00001708  54000000	nop; delay slot nop
  686  0000170c          	L20_LF2:
  687  0000170c  8fa20000	lw	r2,0(r29)
  688  00001710  8fdffff8	lw	r31,-8(r30)
  689  00001714  001ee820	add	r29,r0,r30
  690  00001718  8fdefffc	lw	r30,-4(r30)
  691  0000171c  4be00000	jr	r31
  692  00001720  54000000	nop
  693  00001724          	.endproc _dstrcat
  694  00001724          	.align 2
  695  00001724          	.proc _dstrncmp
  696  00001724          	.global _dstrncmp
  697  00001724          	_dstrncmp:
  698                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  699  00001724  afbefffc	sw	-4(r29),r30; push fp
  700  00001728  001df020	add	r30,r0,r29; fp = sp
  701  0000172c  afbffff8	sw	-8(r29),r31; push ret addr
  702  00001730  2fbd0018	subui	r29,r29,#24; alloc local storage
  703  00001734  afa20000	sw	0(r29),r2
  704  00001738  afa30004	sw	4(r29),r3
  705  0000173c  54000000	nop
  706  00001740  20010000	addi	r1,r0,#0
  707  00001744  afc1fff4	sw	-12(r30),r1
  708  00001748          	L25_LF2:
  709  00001748  8fc1fff4	lw	r1,-12(r30)
  710  0000174c  8fc20008	lw	r2,8(r30)
  711  00001750  0022082a	slt	r1,r1,r2
  712  00001754  1420000c	bnez	r1,L28_LF2
  713  00001758  54000000	nop; delay slot nop
  714  0000175c  08000088	j	L26_LF2
  715  00001760  54000000	nop; delay slot nop
  716  00001764          	L28_LF2:
  717  00001764  8fc10004	lw	r1,4(r30)
  718  00001768  90220000	lbu	r2,(r1)
  719  0000176c  64410000	snei	r1,r2,#0
  720  00001770  14200018	bnez	r1,L29_LF2
  721  00001774  54000000	nop; delay slot nop
  722  00001778  20010000	addi	r1,r0,#0
  723  0000177c  080000d8	j	L24_LF2
  724  00001780  54000000	nop; delay slot nop
  725  00001784  08000028	j	L30_LF2
  726  00001788  54000000	nop; delay slot nop
  727  0000178c          	L29_LF2:
  728  0000178c  8fc10000	lw	r1,(r30)
  729  00001790  8fc20004	lw	r2,4(r30)
  730  00001794  90210000	lbu	r1,(r1)
  731  00001798  90420000	lbu	r2,(r2)
  732  0000179c  00220829	sne	r1,r1,r2
  733  000017a0  1020000c	beqz	r1,L30_LF2
  734  000017a4  54000000	nop; delay slot nop
  735  000017a8  0800003c	j	L26_LF2
  736  000017ac  54000000	nop; delay slot nop
  737  000017b0          	L31_LF2:
  738  000017b0          	L30_LF2:
  739  000017b0  8fc20000	lw	r2,(r30)
  740  000017b4  20410001	addi	r1,r2,#1
  741  000017b8  00011020	add	r2,r0,r1
  742  000017bc  afc20000	sw	(r30),r2
  743  000017c0  8fc20004	lw	r2,4(r30)
  744  000017c4  20410001	addi	r1,r2,#1
  745  000017c8  00011020	add	r2,r0,r1
  746  000017cc  afc20004	sw	4(r30),r2
  747  000017d0          	L27_LF2:
  748  000017d0  8fc2fff4	lw	r2,-12(r30)
  749  000017d4  20410001	addi	r1,r2,#1
  750  000017d8  00011020	add	r2,r0,r1
  751  000017dc  afc2fff4	sw	-12(r30),r2
  752  000017e0  0bffff64	j	L25_LF2
  753  000017e4  54000000	nop; delay slot nop
  754  000017e8          	L26_LF2:
  755  000017e8  8fc1fff4	lw	r1,-12(r30)
  756  000017ec  8fc20008	lw	r2,8(r30)
  757  000017f0  00220828	seq	r1,r1,r2
  758  000017f4  10200018	beqz	r1,L32_LF2
  759  000017f8  54000000	nop; delay slot nop
  760  000017fc  20010000	addi	r1,r0,#0
  761  00001800  08000054	j	L24_LF2
  762  00001804  54000000	nop; delay slot nop
  763  00001808  0800004c	j	L33_LF2
  764  0000180c  54000000	nop; delay slot nop
  765  00001810          	L32_LF2:
  766  00001810  8fc20000	lw	r2,(r30)
  767  00001814  90410000	lbu	r1,(r2)
  768  00001818  8fc20004	lw	r2,4(r30)
  769  0000181c  90430000	lbu	r3,(r2)
  770  00001820  00230822	sub	r1,r1,r3
  771  00001824  74220000	sgei	r2,r1,#0
  772  00001828  10400020	beqz	r2,L34_LF2
  773  0000182c  54000000	nop; delay slot nop
  774  00001830  8fc10000	lw	r1,(r30)
  775  00001834  8fc20004	lw	r2,4(r30)
  776  00001838  90210000	lbu	r1,(r1)
  777  0000183c  90420000	lbu	r2,(r2)
  778  00001840  00220829	sne	r1,r1,r2
  779  00001844  08000008	j	L35_LF2
  780  00001848  54000000	nop; delay slot nop
  781  0000184c          	L34_LF2:
  782  0000184c  2001ffff	addi	r1,r0,#-1
  783  00001850          	L35_LF2:
  784  00001850  08000004	j	L24_LF2
  785  00001854  54000000	nop; delay slot nop
  786  00001858          	L33_LF2:
  787  00001858          	L24_LF2:
  788  00001858  8fa20000	lw	r2,0(r29)
  789  0000185c  8fa30004	lw	r3,4(r29)
  790  00001860  8fdffff8	lw	r31,-8(r30)
  791  00001864  001ee820	add	r29,r0,r30
  792  00001868  8fdefffc	lw	r30,-4(r30)
  793  0000186c  4be00000	jr	r31
  794  00001870  54000000	nop
  795  00001874          	.endproc _dstrncmp
  796  00001874          	.align 2
  797  00001874          	.proc _dstrlen
  798  00001874          	.global _dstrlen
  799  00001874          	_dstrlen:
  800                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  801  00001874  afbefffc	sw	-4(r29),r30; push fp
  802  00001878  001df020	add	r30,r0,r29; fp = sp
  803  0000187c  afbffff8	sw	-8(r29),r31; push ret addr
  804  00001880  2fbd0018	subui	r29,r29,#24; alloc local storage
  805  00001884  afa20000	sw	0(r29),r2
  806  00001888  20010000	addi	r1,r0,#0
  807  0000188c  afc1fff4	sw	-12(r30),r1
  808  00001890          	L37_LF2:
  809  00001890  8fc10000	lw	r1,(r30)
  810  00001894  20220001	addi	r2,r1,#1
  811  00001898  afc20000	sw	(r30),r2
  812  0000189c  90210000	lbu	r1,(r1)
  813  000018a0  64220000	snei	r2,r1,#0
  814  000018a4  1440000c	bnez	r2,L39_LF2
  815  000018a8  54000000	nop; delay slot nop
  816  000018ac  0800001c	j	L38_LF2
  817  000018b0  54000000	nop; delay slot nop
  818  000018b4          	L39_LF2:
  819  000018b4  8fc2fff4	lw	r2,-12(r30)
  820  000018b8  20410001	addi	r1,r2,#1
  821  000018bc  00011020	add	r2,r0,r1
  822  000018c0  afc2fff4	sw	-12(r30),r2
  823  000018c4  0bffffc8	j	L37_LF2
  824  000018c8  54000000	nop; delay slot nop
  825  000018cc          	L38_LF2:
  826  000018cc  8fc1fff4	lw	r1,-12(r30)
  827  000018d0  08000004	j	L36_LF2
  828  000018d4  54000000	nop; delay slot nop
  829  000018d8          	L36_LF2:
  830  000018d8  8fa20000	lw	r2,0(r29)
  831  000018dc  8fdffff8	lw	r31,-8(r30)
  832  000018e0  001ee820	add	r29,r0,r30
  833  000018e4  8fdefffc	lw	r30,-4(r30)
  834  000018e8  4be00000	jr	r31
  835  000018ec  54000000	nop
  836  000018f0          	.endproc _dstrlen
  837  000018f0          	.align 2
  838  000018f0          	.proc _dstrstr
  839  000018f0          	.global _dstrstr
  840  000018f0          	_dstrstr:
  841                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  842  000018f0  afbefffc	sw	-4(r29),r30; push fp
  843  000018f4  001df020	add	r30,r0,r29; fp = sp
  844  000018f8  afbffff8	sw	-8(r29),r31; push ret addr
  845  000018fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  846  00001900  afa20000	sw	0(r29),r2
  847  00001904  23bdfff8	addi	r29,r29,#-8
  848  00001908  001d0820	add	r1,r0,r29
  849  0000190c  8fc20004	lw	r2,4(r30)
  850  00001910  ac220000	sw	(r1),r2
  851  00001914  0fffff5c	jal	_dstrlen
  852  00001918  54000000	nop; delay slot nop
  853  0000191c  23bd0008	addi	r29,r29,#8
  854  00001920  afc1fff4	sw	-12(r30),r1
  855  00001924          	L41_LF2:
  856  00001924  8fc10000	lw	r1,(r30)
  857  00001928  90220000	lbu	r2,(r1)
  858  0000192c  64410000	snei	r1,r2,#0
  859  00001930  1420000c	bnez	r1,L43_LF2
  860  00001934  54000000	nop; delay slot nop
  861  00001938  08000060	j	L42_LF2
  862  0000193c  54000000	nop; delay slot nop
  863  00001940          	L43_LF2:
  864  00001940  23bdfff0	addi	r29,r29,#-16
  865  00001944  001d0820	add	r1,r0,r29
  866  00001948  8fc20000	lw	r2,(r30)
  867  0000194c  ac220000	sw	(r1),r2
  868  00001950  8fc20004	lw	r2,4(r30)
  869  00001954  ac220004	sw	4(r1),r2
  870  00001958  8fc2fff4	lw	r2,-12(r30)
  871  0000195c  ac220008	sw	8(r1),r2
  872  00001960  0ffffdc0	jal	_dstrncmp
  873  00001964  54000000	nop; delay slot nop
  874  00001968  23bd0010	addi	r29,r29,#16
  875  0000196c  64220000	snei	r2,r1,#0
  876  00001970  14400010	bnez	r2,L44_LF2
  877  00001974  54000000	nop; delay slot nop
  878  00001978  8fc10000	lw	r1,(r30)
  879  0000197c  08000028	j	L40_LF2
  880  00001980  54000000	nop; delay slot nop
  881  00001984          	L44_LF2:
  882  00001984  8fc20000	lw	r2,(r30)
  883  00001988  20410001	addi	r1,r2,#1
  884  0000198c  00011020	add	r2,r0,r1
  885  00001990  afc20000	sw	(r30),r2
  886  00001994  0bffff8c	j	L41_LF2
  887  00001998  54000000	nop; delay slot nop
  888  0000199c          	L42_LF2:
  889  0000199c  20010000	addi	r1,r0,#0
  890  000019a0  08000004	j	L40_LF2
  891  000019a4  54000000	nop; delay slot nop
  892  000019a8          	L40_LF2:
  893  000019a8  8fa20000	lw	r2,0(r29)
  894  000019ac  8fdffff8	lw	r31,-8(r30)
  895  000019b0  001ee820	add	r29,r0,r30
  896  000019b4  8fdefffc	lw	r30,-4(r30)
  897  000019b8  4be00000	jr	r31
  898  000019bc  54000000	nop
  899  000019c0          	.endproc _dstrstr
  900  000019c0          	.align 2
  901  000019c0          	.proc _dmindex
  902  000019c0          	.global _dmindex
  903  000019c0          	_dmindex:
  904                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  905  000019c0  afbefffc	sw	-4(r29),r30; push fp
  906  000019c4  001df020	add	r30,r0,r29; fp = sp
  907  000019c8  afbffff8	sw	-8(r29),r31; push ret addr
  908  000019cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  909  000019d0  afa20000	sw	0(r29),r2
  910  000019d4  54000000	nop
  911  000019d8          	L46_LF2:
  912  000019d8  8fc10000	lw	r1,(r30)
  913  000019dc  90220000	lbu	r2,(r1)
  914  000019e0  64410000	snei	r1,r2,#0
  915  000019e4  1420000c	bnez	r1,L48_LF2
  916  000019e8  54000000	nop; delay slot nop
  917  000019ec  08000070	j	L47_LF2
  918  000019f0  54000000	nop; delay slot nop
  919  000019f4          	L48_LF2:
  920  000019f4  8fc10004	lw	r1,4(r30)
  921  000019f8  afc1fff4	sw	-12(r30),r1
  922  000019fc          	L49_LF2:
  923  000019fc  8fc1fff4	lw	r1,-12(r30)
  924  00001a00  90220000	lbu	r2,(r1)
  925  00001a04  64410000	snei	r1,r2,#0
  926  00001a08  1420000c	bnez	r1,L52_LF2
  927  00001a0c  54000000	nop; delay slot nop
  928  00001a10  08000044	j	L50_LF2
  929  00001a14  54000000	nop; delay slot nop
  930  00001a18          	L52_LF2:
  931  00001a18  8fc10000	lw	r1,(r30)
  932  00001a1c  8fc2fff4	lw	r2,-12(r30)
  933  00001a20  90210000	lbu	r1,(r1)
  934  00001a24  90420000	lbu	r2,(r2)
  935  00001a28  00220828	seq	r1,r1,r2
  936  00001a2c  10200010	beqz	r1,L51_LF2
  937  00001a30  54000000	nop; delay slot nop
  938  00001a34  8fc10000	lw	r1,(r30)
  939  00001a38  08000030	j	L45_LF2
  940  00001a3c  54000000	nop; delay slot nop
  941  00001a40          	L53_LF2:
  942  00001a40          	L51_LF2:
  943  00001a40  8fc2fff4	lw	r2,-12(r30)
  944  00001a44  20410001	addi	r1,r2,#1
  945  00001a48  00011020	add	r2,r0,r1
  946  00001a4c  afc2fff4	sw	-12(r30),r2
  947  00001a50  0bffffa8	j	L49_LF2
  948  00001a54  54000000	nop; delay slot nop
  949  00001a58          	L50_LF2:
  950  00001a58  0bffff7c	j	L46_LF2
  951  00001a5c  54000000	nop; delay slot nop
  952  00001a60          	L47_LF2:
  953  00001a60  20010000	addi	r1,r0,#0
  954  00001a64  08000004	j	L45_LF2
  955  00001a68  54000000	nop; delay slot nop
  956  00001a6c          	L45_LF2:
  957  00001a6c  8fa20000	lw	r2,0(r29)
  958  00001a70  8fdffff8	lw	r31,-8(r30)
  959  00001a74  001ee820	add	r29,r0,r30
  960  00001a78  8fdefffc	lw	r30,-4(r30)
  961  00001a7c  4be00000	jr	r31
  962  00001a80  54000000	nop
  963  00001a84          	.endproc _dmindex
  964  00001a84          	.align 2
  965  00001a84          	.proc _dindex
  966  00001a84          	.global _dindex
  967  00001a84          	_dindex:
  968                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  969  00001a84  afbefffc	sw	-4(r29),r30; push fp
  970  00001a88  001df020	add	r30,r0,r29; fp = sp
  971  00001a8c  afbffff8	sw	-8(r29),r31; push ret addr
  972  00001a90  2fbd0010	subui	r29,r29,#16; alloc local storage
  973  00001a94  afa20000	sw	0(r29),r2
  974  00001a98  54000000	nop
  975  00001a9c          	L55_LF2:
  976  00001a9c  8fc10000	lw	r1,(r30)
  977  00001aa0  90220000	lbu	r2,(r1)
  978  00001aa4  64410000	snei	r1,r2,#0
  979  00001aa8  1420000c	bnez	r1,L57_LF2
  980  00001aac  54000000	nop; delay slot nop
  981  00001ab0  08000040	j	L56_LF2
  982  00001ab4  54000000	nop; delay slot nop
  983  00001ab8          	L57_LF2:
  984  00001ab8  8fc10000	lw	r1,(r30)
  985  00001abc  90220000	lbu	r2,(r1)
  986  00001ac0  8fc10004	lw	r1,4(r30)
  987  00001ac4  00411028	seq	r2,r2,r1
  988  00001ac8  10400010	beqz	r2,L58_LF2
  989  00001acc  54000000	nop; delay slot nop
  990  00001ad0  8fc10000	lw	r1,(r30)
  991  00001ad4  08000028	j	L54_LF2
  992  00001ad8  54000000	nop; delay slot nop
  993  00001adc          	L58_LF2:
  994  00001adc  8fc20000	lw	r2,(r30)
  995  00001ae0  20410001	addi	r1,r2,#1
  996  00001ae4  00011020	add	r2,r0,r1
  997  00001ae8  afc20000	sw	(r30),r2
  998  00001aec  0bffffac	j	L55_LF2
  999  00001af0  54000000	nop; delay slot nop
 1000  00001af4          	L56_LF2:
 1001  00001af4  20010000	addi	r1,r0,#0
 1002  00001af8  08000004	j	L54_LF2
 1003  00001afc  54000000	nop; delay slot nop
 1004  00001b00          	L54_LF2:
 1005  00001b00  8fa20000	lw	r2,0(r29)
 1006  00001b04  8fdffff8	lw	r31,-8(r30)
 1007  00001b08  001ee820	add	r29,r0,r30
 1008  00001b0c  8fdefffc	lw	r30,-4(r30)
 1009  00001b10  4be00000	jr	r31
 1010  00001b14  54000000	nop
 1011  00001b18          	.endproc _dindex
 1012  00001b18          	.align 2
 1013  00001b18          	.proc _ditoa
 1014  00001b18          	.global _ditoa
 1015  00001b18          	_ditoa:
 1016                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1017  00001b18  afbefffc	sw	-4(r29),r30; push fp
 1018  00001b1c  001df020	add	r30,r0,r29; fp = sp
 1019  00001b20  afbffff8	sw	-8(r29),r31; push ret addr
 1020  00001b24  2fbd0018	subui	r29,r29,#24; alloc local storage
 1021  00001b28  afa20000	sw	0(r29),r2
 1022  00001b2c  afa30004	sw	4(r29),r3
 1023  00001b30  8fc10000	lw	r1,(r30)
 1024  00001b34  68220000	slti	r2,r1,#0
 1025  00001b38  1040002c	beqz	r2,L60_LF2
 1026  00001b3c  54000000	nop; delay slot nop
 1027  00001b40  8fc10004	lw	r1,4(r30)
 1028  00001b44  20220001	addi	r2,r1,#1
 1029  00001b48  afc20004	sw	4(r30),r2
 1030  00001b4c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1031  00001b50  a0220000	sb	(r1),r2
 1032  00001b54  8fc10000	lw	r1,(r30)
 1033  00001b58  00011022	sub	r2,r0,r1
 1034  00001b5c  afc20000	sw	(r30),r2
 1035  00001b60  08000118	j	L61_LF2
 1036  00001b64  54000000	nop; delay slot nop
 1037  00001b68          	L60_LF2:
 1038  00001b68  8fc10000	lw	r1,(r30)
 1039  00001b6c  64220000	snei	r2,r1,#0
 1040  00001b70  14400020	bnez	r2,L62_LF2
 1041  00001b74  54000000	nop; delay slot nop
 1042  00001b78  8fc10004	lw	r1,4(r30)
 1043  00001b7c  20220001	addi	r2,r1,#1
 1044  00001b80  afc20004	sw	4(r30),r2
 1045  00001b84  20020030	addi	r2,r0,(#0x30)&0xff
 1046  00001b88  a0220000	sb	(r1),r2
 1047  00001b8c  080000ec	j	L61_LF2
 1048  00001b90  54000000	nop; delay slot nop
 1049  00001b94          	L62_LF2:
 1050  00001b94  20010001	addi	r1,r0,#1
 1051  00001b98  afc1fff4	sw	-12(r30),r1
 1052  00001b9c          	L64_LF2:
 1053  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1054  00001ba0  8fc20000	lw	r2,(r30)
 1055  00001ba4  0022082c	sle	r1,r1,r2
 1056  00001ba8  1420000c	bnez	r1,L66_LF2
 1057  00001bac  54000000	nop; delay slot nop
 1058  00001bb0  08000024	j	L65_LF2
 1059  00001bb4  54000000	nop; delay slot nop
 1060  00001bb8          	L67_LF2:
 1061  00001bb8          	L66_LF2:
 1062  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1063  00001bbc  00011820	add	r3,r0,r1
 1064  00001bc0  50620002	slli	r2,r3,#0x2
 1065  00001bc4  00411020	add	r2,r2,r1
 1066  00001bc8  50410001	slli	r1,r2,#0x1
 1067  00001bcc  afc1fff4	sw	-12(r30),r1
 1068  00001bd0  0bffffc8	j	L64_LF2
 1069  00001bd4  54000000	nop; delay slot nop
 1070  00001bd8          	L65_LF2:
 1071  00001bd8  54000000	nop
 1072  00001bdc          	L68_LF2:
 1073  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1074  00001be0  2002000a	addi	r2,r0,#10
 1075  00001be4  00200035	movi2fp	f0,r1
 1076  00001be8  00400835	movi2fp	f1,r2
 1077  00001bec  0401000f	div	f0,f0,f1
 1078  00001bf0  00000834	movfp2i	r1,f0
 1079  00001bf4  afc1fff4	sw	-12(r30),r1
 1080  00001bf8  8fc10004	lw	r1,4(r30)
 1081  00001bfc  20220001	addi	r2,r1,#1
 1082  00001c00  afc20004	sw	4(r30),r2
 1083  00001c04  8fc20000	lw	r2,(r30)
 1084  00001c08  8fc3fff4	lw	r3,-12(r30)
 1085  00001c0c  00400035	movi2fp	f0,r2
 1086  00001c10  00600835	movi2fp	f1,r3
 1087  00001c14  0401000f	div	f0,f0,f1
 1088  00001c18  00001034	movfp2i	r2,f0
 1089  00001c1c  00021820	add	r3,r0,r2
 1090  00001c20  20620030	addi	r2,r3,#48
 1091  00001c24  a0220000	sb	(r1),r2
 1092  00001c28  8fc10000	lw	r1,(r30)
 1093  00001c2c  8fc3fff4	lw	r3,-12(r30)
 1094  00001c30  00200035	movi2fp	f0,r1
 1095  00001c34  00600835	movi2fp	f1,r3
 1096  00001c38  0401000f	div	f0,f0,f1
 1097  00001c3c  00001034	movfp2i	r2,f0
 1098  00001c40  8fc3fff4	lw	r3,-12(r30)
 1099  00001c44  00400035	movi2fp	f0,r2
 1100  00001c48  00600835	movi2fp	f1,r3
 1101  00001c4c  0401000e	mult	f0,f0,f1
 1102  00001c50  00001034	movfp2i	r2,f0
 1103  00001c54  00220822	sub	r1,r1,r2
 1104  00001c58  afc10000	sw	(r30),r1
 1105  00001c5c          	L70_LF2:
 1106  00001c5c  8fc1fff4	lw	r1,-12(r30)
 1107  00001c60  6c220001	sgti	r2,r1,#1
 1108  00001c64  1440000c	bnez	r2,L71_LF2
 1109  00001c68  54000000	nop; delay slot nop
 1110  00001c6c  0800000c	j	L61_LF2
 1111  00001c70  54000000	nop; delay slot nop
 1112  00001c74          	L71_LF2:
 1113  00001c74  0bffff64	j	L68_LF2
 1114  00001c78  54000000	nop; delay slot nop
 1115  00001c7c          	L69_LF2:
 1116  00001c7c          	L63_LF2:
 1117  00001c7c          	L61_LF2:
 1118  00001c7c  8fc10004	lw	r1,4(r30)
 1119  00001c80  20020000	addi	r2,r0,(#0x0)&0xff
 1120  00001c84  a0220000	sb	(r1),r2
 1121  00001c88          	L59_LF2:
 1122  00001c88  8fa20000	lw	r2,0(r29)
 1123  00001c8c  8fa30004	lw	r3,4(r29)
 1124  00001c90  8fdffff8	lw	r31,-8(r30)
 1125  00001c94  001ee820	add	r29,r0,r30
 1126  00001c98  8fdefffc	lw	r30,-4(r30)
 1127  00001c9c  4be00000	jr	r31
 1128  00001ca0  54000000	nop
 1129  00001ca4          	.endproc _ditoa
 1130  00001ca4          	.align 2
 1131  00001ca4          	.proc _dstrtol
 1132  00001ca4          	.global _dstrtol
 1133  00001ca4          	_dstrtol:
 1134                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1135  00001ca4  afbefffc	sw	-4(r29),r30; push fp
 1136  00001ca8  001df020	add	r30,r0,r29; fp = sp
 1137  00001cac  afbffff8	sw	-8(r29),r31; push ret addr
 1138  00001cb0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1139  00001cb4  afa20000	sw	0(r29),r2
 1140  00001cb8  20010000	addi	r1,r0,#0
 1141  00001cbc  afc1fff4	sw	-12(r30),r1
 1142  00001cc0          	L73_LF2:
 1143  00001cc0  8fc10000	lw	r1,(r30)
 1144  00001cc4  90220000	lbu	r2,(r1)
 1145  00001cc8  60410020	seqi	r1,r2,#32
 1146  00001ccc  14200034	bnez	r1,L75_LF2
 1147  00001cd0  54000000	nop; delay slot nop
 1148  00001cd4  8fc10000	lw	r1,(r30)
 1149  00001cd8  90220000	lbu	r2,(r1)
 1150  00001cdc  60410009	seqi	r1,r2,#9
 1151  00001ce0  14200020	bnez	r1,L75_LF2
 1152  00001ce4  54000000	nop; delay slot nop
 1153  00001ce8  8fc10000	lw	r1,(r30)
 1154  00001cec  90220000	lbu	r2,(r1)
 1155  00001cf0  6041000a	seqi	r1,r2,#10
 1156  00001cf4  1420000c	bnez	r1,L75_LF2
 1157  00001cf8  54000000	nop; delay slot nop
 1158  00001cfc  0800001c	j	L74_LF2
 1159  00001d00  54000000	nop; delay slot nop
 1160  00001d04          	L75_LF2:
 1161  00001d04  8fc20000	lw	r2,(r30)
 1162  00001d08  20410001	addi	r1,r2,#1
 1163  00001d0c  00011020	add	r2,r0,r1
 1164  00001d10  afc20000	sw	(r30),r2
 1165  00001d14  0bffffa8	j	L73_LF2
 1166  00001d18  54000000	nop; delay slot nop
 1167  00001d1c          	L74_LF2:
 1168  00001d1c  8fc10004	lw	r1,4(r30)
 1169  00001d20  64220000	snei	r2,r1,#0
 1170  00001d24  10400010	beqz	r2,L76_LF2
 1171  00001d28  54000000	nop; delay slot nop
 1172  00001d2c  8fc10004	lw	r1,4(r30)
 1173  00001d30  8fc20000	lw	r2,(r30)
 1174  00001d34  ac220000	sw	(r1),r2
 1175  00001d38          	L76_LF2:
 1176  00001d38  8fc10000	lw	r1,(r30)
 1177  00001d3c  90220000	lbu	r2,(r1)
 1178  00001d40  64410000	snei	r1,r2,#0
 1179  00001d44  14200010	bnez	r1,L77_LF2
 1180  00001d48  54000000	nop; delay slot nop
 1181  00001d4c  8fc1fff4	lw	r1,-12(r30)
 1182  00001d50  08000294	j	L72_LF2
 1183  00001d54  54000000	nop; delay slot nop
 1184  00001d58          	L77_LF2:
 1185  00001d58  8fc10000	lw	r1,(r30)
 1186  00001d5c  90220000	lbu	r2,(r1)
 1187  00001d60  6041002d	seqi	r1,r2,#45
 1188  00001d64  10200024	beqz	r1,L78_LF2
 1189  00001d68  54000000	nop; delay slot nop
 1190  00001d6c  2001ffff	addi	r1,r0,#-1
 1191  00001d70  afc1ffec	sw	-20(r30),r1
 1192  00001d74  8fc20000	lw	r2,(r30)
 1193  00001d78  20410001	addi	r1,r2,#1
 1194  00001d7c  00011020	add	r2,r0,r1
 1195  00001d80  afc20000	sw	(r30),r2
 1196  00001d84  0800000c	j	L79_LF2
 1197  00001d88  54000000	nop; delay slot nop
 1198  00001d8c          	L78_LF2:
 1199  00001d8c  20010001	addi	r1,r0,#1
 1200  00001d90  afc1ffec	sw	-20(r30),r1
 1201  00001d94          	L79_LF2:
 1202  00001d94  8fc10008	lw	r1,8(r30)
 1203  00001d98  64220000	snei	r2,r1,#0
 1204  00001d9c  14400090	bnez	r2,L80_LF2
 1205  00001da0  54000000	nop; delay slot nop
 1206  00001da4  8fc10000	lw	r1,(r30)
 1207  00001da8  90220000	lbu	r2,(r1)
 1208  00001dac  60410030	seqi	r1,r2,#48
 1209  00001db0  10200074	beqz	r1,L81_LF2
 1210  00001db4  54000000	nop; delay slot nop
 1211  00001db8  8fc20000	lw	r2,(r30)
 1212  00001dbc  20410001	addi	r1,r2,#1
 1213  00001dc0  00011020	add	r2,r0,r1
 1214  00001dc4  afc20000	sw	(r30),r2
 1215  00001dc8  8fc10000	lw	r1,(r30)
 1216  00001dcc  90220000	lbu	r2,(r1)
 1217  00001dd0  60410078	seqi	r1,r2,#120
 1218  00001dd4  14200020	bnez	r1,L83_LF2
 1219  00001dd8  54000000	nop; delay slot nop
 1220  00001ddc  8fc10000	lw	r1,(r30)
 1221  00001de0  90220000	lbu	r2,(r1)
 1222  00001de4  60410058	seqi	r1,r2,#88
 1223  00001de8  1420000c	bnez	r1,L83_LF2
 1224  00001dec  54000000	nop; delay slot nop
 1225  00001df0  08000024	j	L82_LF2
 1226  00001df4  54000000	nop; delay slot nop
 1227  00001df8          	L83_LF2:
 1228  00001df8  20010010	addi	r1,r0,#16
 1229  00001dfc  afc10008	sw	8(r30),r1
 1230  00001e00  8fc20000	lw	r2,(r30)
 1231  00001e04  20410001	addi	r1,r2,#1
 1232  00001e08  00011020	add	r2,r0,r1
 1233  00001e0c  afc20000	sw	(r30),r2
 1234  00001e10  0800000c	j	L84_LF2
 1235  00001e14  54000000	nop; delay slot nop
 1236  00001e18          	L82_LF2:
 1237  00001e18  20010008	addi	r1,r0,#8
 1238  00001e1c  afc10008	sw	8(r30),r1
 1239  00001e20          	L84_LF2:
 1240  00001e20  0800000c	j	L80_LF2
 1241  00001e24  54000000	nop; delay slot nop
 1242  00001e28          	L81_LF2:
 1243  00001e28  2001000a	addi	r1,r0,#10
 1244  00001e2c  afc10008	sw	8(r30),r1
 1245  00001e30          	L85_LF2:
 1246  00001e30          	L80_LF2:
 1247  00001e30  8fc10008	lw	r1,8(r30)
 1248  00001e34  70220000	slei	r2,r1,#0
 1249  00001e38  1440001c	bnez	r2,L87_LF2
 1250  00001e3c  54000000	nop; delay slot nop
 1251  00001e40  8fc10008	lw	r1,8(r30)
 1252  00001e44  6c220010	sgti	r2,r1,#16
 1253  00001e48  1440000c	bnez	r2,L87_LF2
 1254  00001e4c  54000000	nop; delay slot nop
 1255  00001e50  08000010	j	L86_LF2
 1256  00001e54  54000000	nop; delay slot nop
 1257  00001e58          	L87_LF2:
 1258  00001e58  8fc1fff4	lw	r1,-12(r30)
 1259  00001e5c  08000188	j	L72_LF2
 1260  00001e60  54000000	nop; delay slot nop
 1261  00001e64          	L86_LF2:
 1262  00001e64  54000000	nop
 1263  00001e68          	L88_LF2:
 1264  00001e68  8fc10000	lw	r1,(r30)
 1265  00001e6c  90220000	lbu	r2,(r1)
 1266  00001e70  6c41002f	sgtui	r1,r2,#47
 1267  00001e74  10200030	beqz	r1,L91_LF2
 1268  00001e78  54000000	nop; delay slot nop
 1269  00001e7c  8fc10000	lw	r1,(r30)
 1270  00001e80  90220000	lbu	r2,(r1)
 1271  00001e84  70410039	sleui	r1,r2,#57
 1272  00001e88  1020001c	beqz	r1,L91_LF2
 1273  00001e8c  54000000	nop; delay slot nop
 1274  00001e90  8fc10000	lw	r1,(r30)
 1275  00001e94  90220000	lbu	r2,(r1)
 1276  00001e98  2041ffd0	addi	r1,r2,#-48
 1277  00001e9c  afc1fff0	sw	-16(r30),r1
 1278  00001ea0  0800008c	j	L92_LF2
 1279  00001ea4  54000000	nop; delay slot nop
 1280  00001ea8          	L91_LF2:
 1281  00001ea8  8fc10000	lw	r1,(r30)
 1282  00001eac  90220000	lbu	r2,(r1)
 1283  00001eb0  6c410060	sgtui	r1,r2,#96
 1284  00001eb4  10200030	beqz	r1,L93_LF2
 1285  00001eb8  54000000	nop; delay slot nop
 1286  00001ebc  8fc10000	lw	r1,(r30)
 1287  00001ec0  90220000	lbu	r2,(r1)
 1288  00001ec4  7041007a	sleui	r1,r2,#122
 1289  00001ec8  1020001c	beqz	r1,L93_LF2
 1290  00001ecc  54000000	nop; delay slot nop
 1291  00001ed0  8fc10000	lw	r1,(r30)
 1292  00001ed4  90220000	lbu	r2,(r1)
 1293  00001ed8  2041ffa9	addi	r1,r2,#-87
 1294  00001edc  afc1fff0	sw	-16(r30),r1
 1295  00001ee0  0800004c	j	L92_LF2
 1296  00001ee4  54000000	nop; delay slot nop
 1297  00001ee8          	L93_LF2:
 1298  00001ee8  8fc10000	lw	r1,(r30)
 1299  00001eec  90220000	lbu	r2,(r1)
 1300  00001ef0  6c410040	sgtui	r1,r2,#64
 1301  00001ef4  10200030	beqz	r1,L95_LF2
 1302  00001ef8  54000000	nop; delay slot nop
 1303  00001efc  8fc10000	lw	r1,(r30)
 1304  00001f00  90220000	lbu	r2,(r1)
 1305  00001f04  7041005a	sleui	r1,r2,#90
 1306  00001f08  1020001c	beqz	r1,L95_LF2
 1307  00001f0c  54000000	nop; delay slot nop
 1308  00001f10  8fc10000	lw	r1,(r30)
 1309  00001f14  90220000	lbu	r2,(r1)
 1310  00001f18  2041ffc9	addi	r1,r2,#-55
 1311  00001f1c  afc1fff0	sw	-16(r30),r1
 1312  00001f20  0800000c	j	L92_LF2
 1313  00001f24  54000000	nop; delay slot nop
 1314  00001f28          	L95_LF2:
 1315  00001f28  200103e8	addi	r1,r0,#1000
 1316  00001f2c  afc1fff0	sw	-16(r30),r1
 1317  00001f30          	L96_LF2:
 1318  00001f30          	L94_LF2:
 1319  00001f30          	L92_LF2:
 1320  00001f30  8fc1fff0	lw	r1,-16(r30)
 1321  00001f34  8fc20008	lw	r2,8(r30)
 1322  00001f38  0022082a	slt	r1,r1,r2
 1323  00001f3c  10200040	beqz	r1,L90_LF2
 1324  00001f40  54000000	nop; delay slot nop
 1325  00001f44  8fc1fff4	lw	r1,-12(r30)
 1326  00001f48  8fc20008	lw	r2,8(r30)
 1327  00001f4c  00200035	movi2fp	f0,r1
 1328  00001f50  00400835	movi2fp	f1,r2
 1329  00001f54  0401000e	mult	f0,f0,f1
 1330  00001f58  00000834	movfp2i	r1,f0
 1331  00001f5c  afc1fff4	sw	-12(r30),r1
 1332  00001f60  8fc1fff4	lw	r1,-12(r30)
 1333  00001f64  8fc2fff0	lw	r2,-16(r30)
 1334  00001f68  00220820	add	r1,r1,r2
 1335  00001f6c  afc1fff4	sw	-12(r30),r1
 1336  00001f70  8fc20000	lw	r2,(r30)
 1337  00001f74  20410001	addi	r1,r2,#1
 1338  00001f78  00011020	add	r2,r0,r1
 1339  00001f7c  afc20000	sw	(r30),r2
 1340  00001f80          	L97_LF2:
 1341  00001f80          	L90_LF2:
 1342  00001f80  8fc1fff0	lw	r1,-16(r30)
 1343  00001f84  8fc20008	lw	r2,8(r30)
 1344  00001f88  0022082a	slt	r1,r1,r2
 1345  00001f8c  1420000c	bnez	r1,L98_LF2
 1346  00001f90  54000000	nop; delay slot nop
 1347  00001f94  0800000c	j	L89_LF2
 1348  00001f98  54000000	nop; delay slot nop
 1349  00001f9c          	L98_LF2:
 1350  00001f9c  0bfffec8	j	L88_LF2
 1351  00001fa0  54000000	nop; delay slot nop
 1352  00001fa4          	L89_LF2:
 1353  00001fa4  8fc10004	lw	r1,4(r30)
 1354  00001fa8  64220000	snei	r2,r1,#0
 1355  00001fac  10400010	beqz	r2,L99_LF2
 1356  00001fb0  54000000	nop; delay slot nop
 1357  00001fb4  8fc10004	lw	r1,4(r30)
 1358  00001fb8  8fc20000	lw	r2,(r30)
 1359  00001fbc  ac220000	sw	(r1),r2
 1360  00001fc0          	L99_LF2:
 1361  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1362  00001fc4  8fc2ffec	lw	r2,-20(r30)
 1363  00001fc8  00200035	movi2fp	f0,r1
 1364  00001fcc  00400835	movi2fp	f1,r2
 1365  00001fd0  0401000e	mult	f0,f0,f1
 1366  00001fd4  00000834	movfp2i	r1,f0
 1367  00001fd8  afc1fff4	sw	-12(r30),r1
 1368  00001fdc  8fc1fff4	lw	r1,-12(r30)
 1369  00001fe0  08000004	j	L72_LF2
 1370  00001fe4  54000000	nop; delay slot nop
 1371  00001fe8          	L72_LF2:
 1372  00001fe8  8fa20000	lw	r2,0(r29)
 1373  00001fec  8fdffff8	lw	r31,-8(r30)
 1374  00001ff0  001ee820	add	r29,r0,r30
 1375  00001ff4  8fdefffc	lw	r30,-4(r30)
 1376  00001ff8  4be00000	jr	r31
 1377  00001ffc  54000000	nop
 1378  00002000          	.endproc _dstrtol
 1379  00002000          	.align 2
 1380  00002000          	.proc _bcopy
 1381  00002000          	.global _bcopy
 1382  00002000          	_bcopy:
 1383                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1384  00002000  afbefffc	sw	-4(r29),r30; push fp
 1385  00002004  001df020	add	r30,r0,r29; fp = sp
 1386  00002008  afbffff8	sw	-8(r29),r31; push ret addr
 1387  0000200c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1388  00002010  afa20000	sw	0(r29),r2
 1389  00002014  afa30004	sw	4(r29),r3
 1390  00002018  54000000	nop
 1391  0000201c          	L101_LF2:
 1392  0000201c  8fc10008	lw	r1,8(r30)
 1393  00002020  2022ffff	addi	r2,r1,#-1
 1394  00002024  afc20008	sw	8(r30),r2
 1395  00002028  6c210000	sgti	r1,r1,#0
 1396  0000202c  1420000c	bnez	r1,L103_LF2
 1397  00002030  54000000	nop; delay slot nop
 1398  00002034  0800002c	j	L102_LF2
 1399  00002038  54000000	nop; delay slot nop
 1400  0000203c          	L103_LF2:
 1401  0000203c  8fc10004	lw	r1,4(r30)
 1402  00002040  20220001	addi	r2,r1,#1
 1403  00002044  afc20004	sw	4(r30),r2
 1404  00002048  8fc20000	lw	r2,(r30)
 1405  0000204c  20430001	addi	r3,r2,#1
 1406  00002050  afc30000	sw	(r30),r3
 1407  00002054  80420000	lb	r2,(r2)
 1408  00002058  a0220000	sb	(r1),r2
 1409  0000205c  0bffffbc	j	L101_LF2
 1410  00002060  54000000	nop; delay slot nop
 1411  00002064          	L102_LF2:
 1412  00002064          	L100_LF2:
 1413  00002064  8fa20000	lw	r2,0(r29)
 1414  00002068  8fa30004	lw	r3,4(r29)
 1415  0000206c  8fdffff8	lw	r31,-8(r30)
 1416  00002070  001ee820	add	r29,r0,r30
 1417  00002074  8fdefffc	lw	r30,-4(r30)
 1418  00002078  4be00000	jr	r31
 1419  0000207c  54000000	nop
 1420  00002080          	.endproc _bcopy
 1421  00002080          	.align 2
 1422  00002080          	.proc _bzero
 1423  00002080          	.global _bzero
 1424  00002080          	_bzero:
 1425                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1426  00002080  afbefffc	sw	-4(r29),r30; push fp
 1427  00002084  001df020	add	r30,r0,r29; fp = sp
 1428  00002088  afbffff8	sw	-8(r29),r31; push ret addr
 1429  0000208c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1430  00002090  afa20000	sw	0(r29),r2
 1431  00002094  54000000	nop
 1432  00002098          	L105_LF2:
 1433  00002098  8fc10004	lw	r1,4(r30)
 1434  0000209c  2022ffff	addi	r2,r1,#-1
 1435  000020a0  afc20004	sw	4(r30),r2
 1436  000020a4  6c210000	sgti	r1,r1,#0
 1437  000020a8  1420000c	bnez	r1,L107_LF2
 1438  000020ac  54000000	nop; delay slot nop
 1439  000020b0  08000020	j	L106_LF2
 1440  000020b4  54000000	nop; delay slot nop
 1441  000020b8          	L107_LF2:
 1442  000020b8  8fc10000	lw	r1,(r30)
 1443  000020bc  20220001	addi	r2,r1,#1
 1444  000020c0  afc20000	sw	(r30),r2
 1445  000020c4  20020000	addi	r2,r0,(#0x0)&0xff
 1446  000020c8  a0220000	sb	(r1),r2
 1447  000020cc  0bffffc8	j	L105_LF2
 1448  000020d0  54000000	nop; delay slot nop
 1449  000020d4          	L106_LF2:
 1450  000020d4          	L104_LF2:
 1451  000020d4  8fa20000	lw	r2,0(r29)
 1452  000020d8  8fdffff8	lw	r31,-8(r30)
 1453  000020dc  001ee820	add	r29,r0,r30
 1454  000020e0  8fdefffc	lw	r30,-4(r30)
 1455  000020e4  4be00000	jr	r31
 1456  000020e8  54000000	nop
 1457  000020ec          	.endproc _bzero
 1458  000020ec          	.align 2
 1459  000020ec          	.proc _min
 1460  000020ec          	.global _min
 1461  000020ec          	_min:
 1462                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1463  000020ec  afbefffc	sw	-4(r29),r30; push fp
 1464  000020f0  001df020	add	r30,r0,r29; fp = sp
 1465  000020f4  afbffff8	sw	-8(r29),r31; push ret addr
 1466  000020f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1467  000020fc  afa20000	sw	0(r29),r2
 1468  00002100  afa30004	sw	4(r29),r3
 1469  00002104  8fc10000	lw	r1,(r30)
 1470  00002108  8fc20004	lw	r2,4(r30)
 1471  0000210c  0022182c	sle	r3,r1,r2
 1472  00002110  14600008	bnez	r3,L109_LF2
 1473  00002114  54000000	nop; delay slot nop
 1474  00002118  8fc10004	lw	r1,4(r30)
 1475  0000211c          	L109_LF2:
 1476  0000211c  08000004	j	L108_LF2
 1477  00002120  54000000	nop; delay slot nop
 1478  00002124          	L108_LF2:
 1479  00002124  8fa20000	lw	r2,0(r29)
 1480  00002128  8fa30004	lw	r3,4(r29)
 1481  0000212c  8fdffff8	lw	r31,-8(r30)
 1482  00002130  001ee820	add	r29,r0,r30
 1483  00002134  8fdefffc	lw	r30,-4(r30)
 1484  00002138  4be00000	jr	r31
 1485  0000213c  54000000	nop
 1486  00002140          	.endproc _min
 1487                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1488                      ;;;
 1489                      ;;; Most of the traps are called in files from libtraps.
 1492  00002140          	.align 2
 1493  00002140          	.proc _exit
 1494  00002140          	.global _exit
 1495  00002140          	_exit:
 1496  00002140  44000300	trap	#0x300
 1497  00002144  4be00000	jr	r31
 1498  00002148  54000000	nop
 1499  0000214c          	.endproc _exit
 1501                      ; for the benefit of gcc.
 1502  0000214c          	.proc ___main
 1503  0000214c          	.global ___main
 1504  0000214c          	___main:
 1505  0000214c  4be00000	jr	r31
 1506  00002150  54000000	nop
 1507  00002154          	.endproc ___main
 1508  00002154          	.text
 1509  00002154          	.global _etext
 1510  00002154          	_etext:
 1511  00002154          	.align 3
 1512  00002158          	.data
 1513  000030ae          	.global _edata
 1514  000030ae          	_edata:
